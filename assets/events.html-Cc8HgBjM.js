import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as c,c as d,b as n,e as a,w as i,d as e,a as u}from"./app-Cphw7wZ-.js";const p={},r=n("p",null,[n("code",null,"Neutralino.events"),e(" 命名空间包含了与原生事件处理相关的方法。这些事件通常是由基于原生状态变化的 Neutralinojs 服务器发起的。")],-1),v=n("h2",{id:"event-types",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#event-types"},[n("span",null,"Event types")])],-1),m=n("thead",null,[n("tr",null,[n("th",null,"Event id"),n("th",null,"Description"),n("th",null,"Available modes"),n("th",null,"Additional data")])],-1),h=n("tr",null,[n("td",null,[n("code",null,"ready")]),n("td",null,"当客户端库与 Neutralino 服务器连接时发生。"),n("td",null,[n("code",null,"all")]),n("td",null,[n("code",null,"null")])],-1),k=n("tr",null,[n("td",null,[n("code",null,"trayMenuItemClicked")]),n("td",null,"当用户点击托盘菜单项时发生。"),n("td",null,[n("code",null,"all")]),n("td",null,[n("code",null,"TrayMenuItem")])],-1),_=n("tr",null,[n("td",null,[n("code",null,"windowClose")]),n("td",null,"当用户关闭窗口时发生。"),n("td",null,[n("code",null,"window")]),n("td",null,[n("code",null,"null")])],-1),g=n("tr",null,[n("td",null,[n("code",null,"windowFocus")]),n("td",null,"当窗口获得焦点时发生。"),n("td",null,[n("code",null,"window")]),n("td",null,[n("code",null,"null")])],-1),y=n("tr",null,[n("td",null,[n("code",null,"windowBlur")]),n("td",null,"当窗口失去焦点状态时发生。"),n("td",null,[n("code",null,"window")]),n("td",null,[n("code",null,"null")])],-1),f=n("tr",null,[n("td",null,[n("code",null,"serverOffline")]),n("td",null,"当 Neutralino 服务器离线时发生"),n("td",null,[n("code",null,"all")]),n("td",null,[n("code",null,"null")])],-1),b=n("tr",null,[n("td",null,[n("code",null,"clientConnect")]),n("td",null,"当新客户端访问应用程序时发生。"),n("td",null,[n("code",null,"all")]),n("td",null,"总客户端数")],-1),N=n("tr",null,[n("td",null,[n("code",null,"clientDisconnect")]),n("td",null,"当已连接的客户端离开应用程序时发生。"),n("td",null,[n("code",null,"all")]),n("td",null,"总客户端数")],-1),w=n("tr",null,[n("td",null,[n("code",null,"appClientConnect")]),n("td",null,"当新的应用程序实例开始时发生。"),n("td",null,[n("code",null,"all")]),n("td",null,"总应用客户端数")],-1),j=n("tr",null,[n("td",null,[n("code",null,"appClientDisconnect")]),n("td",null,"当应用程序实例结束时发生。"),n("td",null,[n("code",null,"all")]),n("td",null,"总应用客户端数")],-1),x=n("tr",null,[n("td",null,[n("code",null,"extClientConnect")]),n("td",null,"当新的扩展连接时发生。"),n("td",null,[n("code",null,"all")]),n("td",null,"扩展标识符")],-1),C=n("tr",null,[n("td",null,[n("code",null,"extClientDisconnect")]),n("td",null,"当扩展断开连接时发生。"),n("td",null,[n("code",null,"all")]),n("td",null,"扩展标识符")],-1),E=n("tr",null,[n("td",null,[n("code",null,"extensionReady")]),n("td",null,"当扩展准备好与应用通信时发生。"),n("td",null,[n("code",null,"all")]),n("td",null,"扩展标识符")],-1),T=n("td",null,[n("code",null,"spawnedProcess")],-1),P=n("td",null,"当生成的进程有更新时发生。",-1),S=n("td",null,[n("code",null,"all")],-1),D=n("code",null,"SpawnedProcess",-1),I=n("code",null,"action",-1),M=n("code",null,"stdOut",-1),O=n("code",null,"stdErr",-1),F=n("code",null,"exit",-1),R=n("code",null,"data",-1),B=n("tr",null,[n("td",null,[n("code",null,"openedFile")]),n("td",null,"对每个读取操作以及每当流游标到达 EOF 时发生。"),n("td",null,[n("code",null,"all")]),n("td",null,[e("文件流标识符带有 "),n("code",null,"action"),e("（"),n("code",null,"data"),e(", "),n("code",null,"dataBinary"),e(", 和 "),n("code",null,"end"),e("）和 "),n("code",null,"data"),e("（流块内容）")])],-1),z=n("tr",null,[n("td",null,[n("code",null,"watchFile")]),n("td",null,"根据监视器对每个文件系统变更事件发生时。"),n("td",null,[n("code",null,"all")]),n("td",null,[e("文件监视器标识符带有 "),n("code",null,"action"),e("（"),n("code",null,"add"),e(", "),n("code",null,"delete"),e(", "),n("code",null,"modified"),e(", 和 "),n("code",null,"moved"),e("），"),n("code",null,"dir"),e(" 和 "),n("code",null,"filename")])],-1),A=n("h2",{id:"events-on-eventname-handler",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#events-on-eventname-handler"},[n("span",null,"events.on(eventName, handler)")])],-1),L=n("p",null,"注册一个新的事件处理程序。",-1),V=n("h3",{id:"parameters",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#parameters"},[n("span",null,"Parameters")])],-1),Z=n("li",null,[n("code",null,"eventName"),e(" String: 事件的名称。")],-1),J=n("code",null,"handler",-1),U={href:"https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent",target:"_blank",rel:"noopener noreferrer"},W=n("code",null,"detail",-1),$=u(`<div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">onTrayMenuItemClicked</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Event data: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>event<span class="token punctuation">.</span>detail<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;trayMenuItemClicked&#39;</span><span class="token punctuation">,</span> onTrayMenuItemClicked<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="events-off-eventname-handler" tabindex="-1"><a class="header-anchor" href="#events-off-eventname-handler"><span>events.off(eventName, handler)</span></a></h2><p>注销一个事件处理程序。</p><h3 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h3><ul><li><code>eventName</code> String: 事件的名称。</li><li><code>handler</code> Function: 函数引用。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">&#39;trayMenuItemClicked&#39;</span><span class="token punctuation">,</span> onTrayMenuItemClicked<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="events-dispatch-eventname-data" tabindex="-1"><a class="header-anchor" href="#events-dispatch-eventname-data"><span>events.dispatch(eventName, data)</span></a></h2><p>向当前应用实例分派一个新事件。Neutralinojs 客户端在内部使用这个 JavaScript 函数调用来分派原生事件。</p><h3 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h3><ul><li><code>eventName</code> String: 事件的名称。</li><li><code>data</code> Object (optional): 事件的附加数据。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&#39;myTestEvent&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">myData</span><span class="token operator">:</span> <span class="token string">&#39;测试数据&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="events-broadcast-eventname-data" tabindex="-1"><a class="header-anchor" href="#events-broadcast-eventname-data"><span>events.broadcast(eventName, data)</span></a></h2><p>向所有客户端（包括应用和扩展客户端）分派一个新事件。</p><h3 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3"><span>Parameters</span></a></h3><ul><li><code>eventName</code> String: 事件的名称。</li><li><code>data</code> Object (optional): 事件的附加数据。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token function">broadcast</span><span class="token punctuation">(</span><span class="token string">&#39;myTestEvent&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;你好&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token function">broadcast</span><span class="token punctuation">(</span><span class="token string">&#39;myTestEvent&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">myData</span><span class="token operator">:</span> <span class="token string">&#39;测试数据&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token function">broadcast</span><span class="token punctuation">(</span><span class="token string">&#39;myTestEvent&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 不带任何数据负载</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16);function q(G,H){const s=t("RouteLink"),l=t("ExternalLinkIcon");return c(),d("div",null,[r,v,n("table",null,[m,n("tbody",null,[h,k,_,g,y,f,b,N,w,j,x,C,E,n("tr",null,[T,P,S,n("td",null,[a(s,{to:"/docs/neutralinojs/api/os.html#spawnedprocess"},{default:i(()=>[D]),_:1}),e(" 带有 "),I,e("（"),M,e(", "),O,e(", 和 "),F,e("）和 "),R,e("（STDOUT, STDERR 或退出代码）")])]),B,z])]),A,L,V,n("ul",null,[Z,n("li",null,[J,e(" Function: 当给定事件发生时将被调用的函数。Neutralinojs 将使用一个 "),n("a",U,[e("CustomEvent"),a(l)]),e(" 实例调用处理程序，并将附加数据附到 "),W,e(" 键上。")])]),$])}const X=o(p,[["render",q],["__file","events.html.vue"]]),Y=JSON.parse('{"path":"/docs/neutralinojs/api/events.html","title":"Neutralino.events","lang":"zh-CN","frontmatter":{"title":"Neutralino.events","description":"Neutralino.events 命名空间包含了与原生事件处理相关的方法。这些事件通常是由基于原生状态变化的 Neutralinojs 服务器发起的。 Event types events.on(eventName, handler) 注册一个新的事件处理程序。 Parameters eventName String: 事件的名称。 handler ...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/sys-shim-doc/docs/neutralinojs/api/events.html"}],["meta",{"property":"og:site_name","content":"sys-shim"}],["meta",{"property":"og:title","content":"Neutralino.events"}],["meta",{"property":"og:description","content":"Neutralino.events 命名空间包含了与原生事件处理相关的方法。这些事件通常是由基于原生状态变化的 Neutralinojs 服务器发起的。 Event types events.on(eventName, handler) 注册一个新的事件处理程序。 Parameters eventName String: 事件的名称。 handler ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-19T06:47:25.000Z"}],["meta",{"property":"article:author","content":"wll8"}],["meta",{"property":"article:modified_time","content":"2024-03-19T06:47:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Neutralino.events\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-19T06:47:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"wll8\\",\\"url\\":\\"https://github.com/wll8\\"}]}"]]},"headers":[{"level":2,"title":"Event types","slug":"event-types","link":"#event-types","children":[]},{"level":2,"title":"events.on(eventName, handler)","slug":"events-on-eventname-handler","link":"#events-on-eventname-handler","children":[{"level":3,"title":"Parameters","slug":"parameters","link":"#parameters","children":[]}]},{"level":2,"title":"events.off(eventName, handler)","slug":"events-off-eventname-handler","link":"#events-off-eventname-handler","children":[{"level":3,"title":"Parameters","slug":"parameters-1","link":"#parameters-1","children":[]}]},{"level":2,"title":"events.dispatch(eventName, data)","slug":"events-dispatch-eventname-data","link":"#events-dispatch-eventname-data","children":[{"level":3,"title":"Parameters","slug":"parameters-2","link":"#parameters-2","children":[]}]},{"level":2,"title":"events.broadcast(eventName, data)","slug":"events-broadcast-eventname-data","link":"#events-broadcast-eventname-data","children":[{"level":3,"title":"Parameters","slug":"parameters-3","link":"#parameters-3","children":[]}]}],"git":{"createdTime":1710830845000,"updatedTime":1710830845000,"contributors":[{"name":"wll8","email":"xwdaysme@gmail.com","commits":1}]},"readingTime":{"minutes":2.17,"words":651},"filePathRelative":"docs/neutralinojs/api/events.md","localizedDate":"2024年3月19日","autoDesc":true}');export{X as comp,Y as data};
