import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o as c,c as o,b as n,d as s,e,a}from"./app-Cphw7wZ-.js";const l={},u=a('<h1 id="fsys" tabindex="-1"><a class="header-anchor" href="#fsys"><span>fsys</span></a></h1><p>下面的演示代码创建文件统一在 <code>C:/sys-shim-test/</code> 文件夹下，我们先创建它。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">createDir</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">C:/sys-shim-test/</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="fsys-attrib" tabindex="-1"><a class="header-anchor" href="#fsys-attrib"><span>fsys.attrib</span></a></h2><p>添加，移除，获取文件属性</p><h3 id="fsys-attrib-文件路径-undefined-文件属性" tabindex="-1"><a class="header-anchor" href="#fsys-attrib-文件路径-undefined-文件属性"><span>fsys.attrib(文件路径, undefined, 文件属性)</span></a></h3><p>添加文件属性 参数一为文件路径 参数三 可以用 | 操作符连接多个属性 成功返回新属性,失败返回null</p>',7),r={href:"https://learn.microsoft.com/zh-cn/windows/win32/fileio/file-attribute-constants",target:"_blank",rel:"noopener noreferrer"},d=a(`<div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>path <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">C:/sys-shim-test/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.txt</span><span class="token template-punctuation string">\`</span></span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hello</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>

<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res1<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">isHidden</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>

<span class="token comment">// 为文件添加隐藏属性</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">attrib</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token number">0x2</span><span class="token punctuation">)</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">isHidden</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span>res1<span class="token punctuation">,</span> res2<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// {res1: 0, res2: 2}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fsys-attrib-文件路径-文件属性" tabindex="-1"><a class="header-anchor" href="#fsys-attrib-文件路径-文件属性"><span>fsys.attrib(文件路径, 文件属性)</span></a></h3><p>移除件属性 参数一为文件路径 参数二可以用 | 操作符连接多个属性 成功返回新属性,失败返回null</p>`,3),k={href:"https://learn.microsoft.com/zh-cn/windows/win32/fileio/file-attribute-constants",target:"_blank",rel:"noopener noreferrer"},v=a(`<div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>path <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">C:/sys-shim-test/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.txt</span><span class="token template-punctuation string">\`</span></span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hello</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>

<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res1<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">isHidden</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>

<span class="token comment">// 为文件添加隐藏属性</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">attrib</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token number">0x2</span><span class="token punctuation">)</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">isHidden</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span>res1<span class="token punctuation">,</span> res2<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// {res1: 0, res2: 2, res3: 0}</span>

<span class="token comment">// 为文件移除文件属性</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">attrib</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token number">0x2</span><span class="token punctuation">)</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res3<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">isHidden</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span>res1<span class="token punctuation">,</span> res2<span class="token punctuation">,</span> res3<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// {res1: 0, res2: 2, res3: 0}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fsys-attrib-文件路径" tabindex="-1"><a class="header-anchor" href="#fsys-attrib-文件路径"><span>fsys.attrib(文件路径)</span></a></h3><p>返回文件属性, 以_FILE_ATTRIBUTE_前缀的常量标志各属性 注意:WIN10 新版存在设为隐藏文件后变只读的问题 参数为空字符串、null、不存在的路径都会 返回 -1</p>`,3),m={href:"https://learn.microsoft.com/zh-cn/windows/win32/fileio/file-attribute-constants",target:"_blank",rel:"noopener noreferrer"},f=a(`<div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>path <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">C:/sys-shim-test/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.txt</span><span class="token template-punctuation string">\`</span></span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hello</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>

<span class="token comment">// 为文件添加隐藏属性</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">attrib</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token number">0x2</span><span class="token punctuation">)</span>
<span class="token comment">// 获取文件属性</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res1<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">attrib</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span>res1<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// {res1: 34}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fsys-copy" tabindex="-1"><a class="header-anchor" href="#fsys-copy"><span>fsys.copy</span></a></h2><p>复制文件或目录, 此函数失败返回 false 时可用 fsys.opError 获取错误代码</p><p>注意：包含不可见字符的错误路径可用「工具&gt;文本文件&gt;十六进制编辑器」 或 string.hex 函数查看</p><h3 id="fsys-copy-源路径-目标路径" tabindex="-1"><a class="header-anchor" href="#fsys-copy-源路径-目标路径"><span>fsys.copy(源路径, 目标路径)</span></a></h3><p>复制文件或目录, 源路径参数可以是多个路径组成的数组,其他参数可选。 如果目标路径已存在或源路径含通配符则复制到目标目录下面, 否则复制文件或目录到参数@2指定的目标路径。</p><p>如果目标路径的父目录可能不存在，请先用 io.createDir 创建该目录</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>path <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">C:/sys-shim-test/test/</span><span class="token template-punctuation string">\`</span></span>
filename <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.txt</span><span class="token template-punctuation string">\`</span></span>
filepath <span class="token operator">=</span> path <span class="token operator">+</span> filename

<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">createDir</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>filepath<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hello</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>

<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span>filepath<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>filepath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.copy.txt</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res1<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>filepath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.copy.txt</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span>res1<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// {res1: &#39;hello&#39;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fsys-createdir-目录路径" tabindex="-1"><a class="header-anchor" href="#fsys-createdir-目录路径"><span>fsys.createDir(目录路径)</span></a></h2><p>创建目录并返回创建成功的完整文件路径 可创建多层目录, 参数二可选</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>path <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">C:/sys-shim-test/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>

<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res1<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">isDir</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">createDir</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">isDir</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span>res1<span class="token punctuation">,</span> res2<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// {res1: false, res2: 16}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fsys-createparentdir-路径" tabindex="-1"><a class="header-anchor" href="#fsys-createparentdir-路径"><span>fsys.createParentDir(路径)</span></a></h2><p>创建指定路径的父目录.</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>path <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">C:/sys-shim-test/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/test</span><span class="token template-punctuation string">\`</span></span>

<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res1<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">createParentDir</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span>res1<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// {res1: &#39;C:\\\\sys-shim-code\\\\tmp\\\\1710905499024\\\\&#39;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fsys-delete" tabindex="-1"><a class="header-anchor" href="#fsys-delete"><span>fsys.delete</span></a></h2><p>删除文件或目录,成功返回 true</p><h3 id="fsys-delete-路径" tabindex="-1"><a class="header-anchor" href="#fsys-delete-路径"><span>fsys.delete(路径)</span></a></h3><p>删除文件或目录,成功返回 true, 删除含畸形路径的目录请改用 fsys.remove 函数。 此函数失败返回 false 时可用 fsys.opError 获取错误代码</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>path <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">C:/sys-shim-test/test/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.txt</span><span class="token template-punctuation string">\`</span></span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">createParentDir</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hello</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res1<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>

<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>

<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span>res1<span class="token punctuation">,</span> res2<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// {res1: &#39;hello&#39;, res2: undefined}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fsys-deleteex" tabindex="-1"><a class="header-anchor" href="#fsys-deleteex"><span>fsys.deleteEx</span></a></h2><p>删除文件或目录,成功返回true, 此函数失败返回 false 时可用 fsys.opError 获取错误代码</p><h2 id="fsys-deleteex-路径" tabindex="-1"><a class="header-anchor" href="#fsys-deleteex-路径"><span>fsys.deleteEx(路径)</span></a></h2><p>删除文件,成功返回true, 路径参数只能是字符串,其他参数可选 如果删除失败,则在下次系统重启时删除文件, 重启删除目录之前必须先清空目录, 重启删除文件的顺序与调用时的顺序相同</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>path <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">C:/sys-shim-test/test/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.txt</span><span class="token template-punctuation string">\`</span></span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">createParentDir</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hello</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>

<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res1<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>

<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">deleteEx</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span>res1<span class="token punctuation">,</span> res2<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// {res1: &#39;hello&#39;, res2: undefined}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fsys-formatsize" tabindex="-1"><a class="header-anchor" href="#fsys-formatsize"><span>fsys.formatSize</span></a></h2><p>转换字节长度到适合的最大单位表示的文本, 单位使用 bytes,KB,MB,GB等</p><h3 id="fsys-formatsize-1" tabindex="-1"><a class="header-anchor" href="#fsys-formatsize-1"><span>fsys.formatSize()</span></a></h3><p>该函数参数支持math.size64支持的所有参数类型</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">formatSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
 * 返回
 [false, &#39;0 字节&#39;]
 */</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fsys-formatsize-字节长度" tabindex="-1"><a class="header-anchor" href="#fsys-formatsize-字节长度"><span>fsys.formatSize(字节长度)</span></a></h3><p>转换字节长度到适合的最大单位表示的文本, 单位使用 bytes,KB,MB,GB等</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">formatSize</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
 * 返回
[false, &#39;100 字节&#39;]
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fsys-formatsize-字节长度低位-字节长度高位" tabindex="-1"><a class="header-anchor" href="#fsys-formatsize-字节长度低位-字节长度高位"><span>fsys.formatSize(字节长度低位, 字节长度高位)</span></a></h3><p>转换字节长度到适合的最大单位( bytes,KB,MB,GB等 ) 低位用于表示4GB以下的长度,高位以4GB为最小单位表示长度</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">formatSize</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
 * 返回
[false, &#39;8.00 GB&#39;]
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fsys-getcurdir" tabindex="-1"><a class="header-anchor" href="#fsys-getcurdir"><span>fsys.getCurDir()</span></a></h2><p>获取当前目录。</p><p>当前目录易被改动，导致相对路径（例如 &quot;./res/&quot;）位置变化。 路径首字符用单个斜杠或反斜杆表示「应用程序根目录」的写法更可靠， 例如：（例如 &quot;/res/&quot;）。 很多组件（例如文件对话框）都可能会悄悄改变当前目录</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">getCurDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
 * 返回
[false, &#39;F:\\\\company-code\\\\sys-shim-core\\\\&#39;]
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fsys-getdrive" tabindex="-1"><a class="header-anchor" href="#fsys-getdrive"><span>fsys.getDrive()</span></a></h2><p>返回应用程序所在分区,以冒号结束</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">getDrive</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
 * 返回
[false, &#39;F:&#39;]
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fsys-getextensionname-路径" tabindex="-1"><a class="header-anchor" href="#fsys-getextensionname-路径"><span>fsys.getExtensionName(路径)</span></a></h2><p>返回文件后缀名,转换为小写. 无后缀名则返回null空值</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">getExtensionName</span><span class="token punctuation">(</span><span class="token string">&quot;C:/sys-shim-test/test3-1.txt&quot;</span><span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
 * 返回
[false, &#39;txt\`&#39;]
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fsys-getfilename-文件路径" tabindex="-1"><a class="header-anchor" href="#fsys-getfilename-文件路径"><span>fsys.getFileName(文件路径)</span></a></h2><p>返回路径的所指向的文件名(或目录名称)</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>path <span class="token operator">=</span> <span class="token string">&quot;C:/sys-shim-test/&quot;</span>
filepath <span class="token operator">=</span> path <span class="token operator">+</span> <span class="token string">&#39;test3.txt&#39;</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">getFileName</span><span class="token punctuation">(</span>filepath<span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
 * 返回
[false, &#39;test3.txt&#39;]
 */</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">getFileName</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
 * 返回
[false, &#39;sys-shim-test&#39;]
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fsys-getparentdir-路径" tabindex="-1"><a class="header-anchor" href="#fsys-getparentdir-路径"><span>fsys.getParentDir(路径)</span></a></h2><p>返回指定路径的父目录</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>path <span class="token operator">=</span> <span class="token string">&quot;C:/sys-shim-test/test3/&quot;</span>
filepath <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">test3-1.txt</span><span class="token template-punctuation string">\`</span></span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">getParentDir</span><span class="token punctuation">(</span>filepath<span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
 * 返回
[false, &#39;C:/sys-shim-test/test3/&#39;]
 */</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">getParentDir</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
 * 返回
[false, &#39;C:/sys-shim-test/&#39;]
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fsys-gettempdir" tabindex="-1"><a class="header-anchor" href="#fsys-gettempdir"><span>fsys.getTempDir()</span></a></h2><p>返回临时目录, 注意拼接目录与子路径应当使用 io.joinpath 函数 获取临时文件路径应当改用 io.tmpname 函数</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">getTempDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
 * 返回
[false, &#39;C:\\\\Users\\\\WINDYE~1\\\\AppData\\\\Local\\\\Temp&#39;]
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fsys-idlistfrompath-路径" tabindex="-1"><a class="header-anchor" href="#fsys-idlistfrompath-路径"><span><s>fsys.idListFromPath(路径)</s></span></a></h2><p>路径转换为名称ID(PIDL)\\路径必须存在</p><h2 id="fsys-isdir-路径" tabindex="-1"><a class="header-anchor" href="#fsys-isdir-路径"><span>fsys.isDir(路径)</span></a></h2><p>路径是否目录 调用attrib检查目标路径是否具有_FILE_ATTRIBUTE_DIRECTORY属性 参数为空字符串或 null 返回 false</p><p>包含不可见字符的错误路径可用「工具&gt;文本文件&gt;十六进制编辑器」 或 string.hex 函数查看</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>path <span class="token operator">=</span> <span class="token string">&quot;C:/sys-shim-test/&quot;</span>
filepath <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">test3-1.txt</span><span class="token template-punctuation string">\`</span></span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">isDir</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
 * 返回
[false, 16]
 */</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">isDir</span><span class="token punctuation">(</span>filepath<span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
 * 返回
[false, false]
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fsys-ishidden-文件路径" tabindex="-1"><a class="header-anchor" href="#fsys-ishidden-文件路径"><span>fsys.isHidden(文件路径)</span></a></h2><p>是否隐藏文件 调用attrib检查文件是否具有_FILE_ATTRIBUTE_HIDDEN属性 注意:WIN10 新版存在设为隐藏文件后变只读的问题</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>path <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">C:/sys-shim-test/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.txt</span><span class="token template-punctuation string">\`</span></span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span><span class="token function">createParentDir</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hello</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>

<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res1<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">isHidden</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>

<span class="token comment">// 为文件添加隐藏属性</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">attrib</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token number">0x2</span><span class="token punctuation">)</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">isHidden</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span>res1<span class="token punctuation">,</span> res2<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// {res1: 0, res2: 2}</span>

<span class="token comment">// 没有创建的文件</span>
newpath <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">C:/sys-shim-test/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.txt</span><span class="token template-punctuation string">\`</span></span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">isHidden</span><span class="token punctuation">(</span>newpath<span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
 * 返回
[false, false]
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fsys-isreadonly-文件路径" tabindex="-1"><a class="header-anchor" href="#fsys-isreadonly-文件路径"><span>fsys.isReadonly(文件路径)</span></a></h2><p>文件是否只读 调用attrib检查文件是否具有_FILE_ATTRIBUTE_READONLY属性</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>path <span class="token operator">=</span> <span class="token string">&quot;C:/sys-shim-test/test3/test3-1.txt&quot;</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">createDir</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>

<span class="token comment">// 判断可读文件</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res1<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">isReadonly</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
<span class="token comment">// 设置为只读文件</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">attrib</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token number">0x1</span><span class="token punctuation">)</span>
<span class="token comment">// 判断只读文件</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">isReadonly</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span>res1<span class="token punctuation">,</span> res2<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// {res1: 0, res2: 1}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fsys-issystem-文件路径" tabindex="-1"><a class="header-anchor" href="#fsys-issystem-文件路径"><span>fsys.isSystem(文件路径)</span></a></h2><p>是否系统文件 调用attrib检查文件是否具有_FILE_ATTRIBUTE_SYSTEM属性</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>path <span class="token operator">=</span> <span class="token string">&quot;C:/sys-shim-test/test3/test3-2.txt&quot;</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">createDir</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>

<span class="token comment">// 判断非系统系统文件</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res1<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">isSystem</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>

<span class="token comment">// 设置为系统文件</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">attrib</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token number">0x4</span><span class="token punctuation">)</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">isSystem</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span>res1<span class="token punctuation">,</span> res2<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// {res1: 0, res2: 4}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fsys-joinpath-根目录-不定个数子路径" tabindex="-1"><a class="header-anchor" href="#fsys-joinpath-根目录-不定个数子路径"><span>fsys.joinpath(根目录, 不定个数子路径)</span></a></h2><p>注意根目录不可以圆点字符开始 可追加任意个子路径参数,如果子路径是绝对路径则返回子路径 拼接时可以使用空参数,但不可全部参数为空</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">joinpath</span><span class="token punctuation">(</span><span class="token string">&quot;C:/&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/test&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/test1-1&quot;</span><span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
 * 返回
[false, &#39;C:\\\\test\\\\test1-1&#39;]
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fsys-list-目录路径-模式匹配-通配符" tabindex="-1"><a class="header-anchor" href="#fsys-list-目录路径-模式匹配-通配符"><span>fsys.list(目录路径, 模式匹配, 通配符)</span></a></h2><p>搜索当前目录下的文件，不搜索子目录下的文件, 返回符合条件的文件名数组,子目录数组，以及全部子目录数组。 注意有三个返回值,数组中使用文件名为键存放对应完整路径的值。 除参数@1以外其他参数可选， 参数@2使用模式匹配语法匹配文件名，模式匹配会成为第三个返回值的匹配条件, 通配符默认值是&quot;<em>.</em>&quot;,也可以传入包含多个通配符的数组,通配符对第三个返回值无效</p><p>参数2：模式匹配使用正则表达式语法匹配</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>path <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">C:/sys-shim-test/test3/</span><span class="token template-punctuation string">\`</span></span>
filenames <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token string">&quot;test3-1.txt&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;test3-2.txt&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;test3-4.txt&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;test3-5.txt&quot;</span>
<span class="token punctuation">]</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> filename <span class="token keyword">of</span> filenames<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">createDir</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
  <span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>path<span class="token operator">+</span>filename<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hello</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span> 
<span class="token punctuation">}</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">*?</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token string">&#39;*.txt&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
 * 返回
[
  // 文件名数组
  [
    &quot;test3-1.txt&quot;,
    &quot;test3-2.txt&quot;,
    &quot;test3-4.txt&quot;,
    &quot;test3-5.txt&quot;
  ], 
  [], // 子目录数组
  []  // 全部子目录数组
]
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fsys-longpath-路径" tabindex="-1"><a class="header-anchor" href="#fsys-longpath-路径"><span>fsys.longpath(路径)</span></a></h2><p>转换为完整路径,并将短文件名转换为长文件名</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">longpath</span><span class="token punctuation">(</span><span class="token string">&quot;C:/SYS-SH~1/&quot;</span><span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
 * 返回
[false, &#39;C:\\\\sys-shim-test\\\\&#39;]
 */</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">longpath</span><span class="token punctuation">(</span><span class="token string">&quot;test.txt&quot;</span><span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
 * 返回
[false, &#39;D:\\\\git2\\\\sys-shim-doc\\\\test.txt&#39;]
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fsys-move" tabindex="-1"><a class="header-anchor" href="#fsys-move"><span>fsys.move</span></a></h2><p>移动文件或目录。 此函数失败返回 false 时可用 fsys.opError 获取错误代码</p><h3 id="fsys-move-源路径-目标路径" tabindex="-1"><a class="header-anchor" href="#fsys-move-源路径-目标路径"><span>fsys.move(源路径, 目标路径)</span></a></h3><p>移动文件或目录, 源路径参数可以是多个路径组成的数组,其他参数可选。 如果目标路径已存在或源路径含通配符则移动到目标目录下面, 否则复制文件或目录到参数@2指定的目标路径。</p><p>如果目标路径的父目录可能不存在，请先用 io.createDir 创建该目录</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>path <span class="token operator">=</span> <span class="token string">&quot;C:/sys-shim-test/test-move1/&quot;</span>
path2 <span class="token operator">=</span> <span class="token string">&quot;C:/sys-shim-test/test-move2/&quot;</span>
filename <span class="token operator">=</span> <span class="token string">&quot;test-move1-1.txt&quot;</span>
filepath <span class="token operator">=</span> path <span class="token operator">+</span> filename
filepath2 <span class="token operator">=</span> path2 <span class="token operator">+</span> filename
<span class="token comment">// 创建目录</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">createDir</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">createDir</span><span class="token punctuation">(</span>path2<span class="token punctuation">)</span>

<span class="token comment">// 写入文件</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>filepath<span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 开始文件不存在</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res1<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>filepath2<span class="token punctuation">)</span> 
<span class="token comment">// 移动文件</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span>filepath<span class="token punctuation">,</span> path2<span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
 * 返回
 [false, true]
 */</span>
<span class="token comment">// 移动后文件存在了</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span>res2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>filepath2<span class="token punctuation">)</span> 
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span>res1<span class="token punctuation">,</span> res2<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// {res1: undefined, res2: &#39;hello&#39;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fsys-rename" tabindex="-1"><a class="header-anchor" href="#fsys-rename"><span>fsys.rename</span></a></h2><p>重命名文件或目录, 此函数失败返回 false 时可用 fsys.opError 获取错误代码</p><h3 id="fsys-rename-源路径-目标路径-fof选项" tabindex="-1"><a class="header-anchor" href="#fsys-rename-源路径-目标路径-fof选项"><span>fsys.rename(源路径, 目标路径, FOF选项)</span></a></h3><p>重命名文件或目录,其他参数可选 FOF选项为 0 或 不指定该选项但 fsys.opFlags 为 0 则显示操作界面与错误信息</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>path <span class="token operator">=</span> <span class="token string">&quot;C:/sys-shim-test/test-rename/&quot;</span>
filename <span class="token operator">=</span> path <span class="token operator">+</span> <span class="token string">&#39;test-rename1.txt&#39;</span>
refilename <span class="token operator">=</span> path <span class="token operator">+</span> <span class="token string">&#39;test-rename2.txt&#39;</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">createDir</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span>

<span class="token comment">// 表示需要重命名文件不存在</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span>res1<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>refilename<span class="token punctuation">)</span>
<span class="token comment">// 重命名文件</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">rename</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> refilename<span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
 * 返回
 [false, true]
 */</span>
<span class="token comment">// 文件已经被重命名不存在</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span>res2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span>
<span class="token comment">// 加载已经重命名文件</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span>res3<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>refilename<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span>res1<span class="token punctuation">,</span> res2<span class="token punctuation">,</span> res3<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// {res1: undefined, res2: undefined, res3: &#39;hello&#39;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fsys-replace-文件路径-查找串-替换串-替换次数" tabindex="-1"><a class="header-anchor" href="#fsys-replace-文件路径-查找串-替换串-替换次数"><span>fsys.replace(文件路径, 查找串, 替换串, 替换次数)</span></a></h2><p>替换文件内容, 查找串支持模式匹配,\\支持所有string.replace函数支持的替换串格式, 不指定替换次数则替换所有匹配串</p><p>成功返回替换次数，否则返回 null</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>path <span class="token operator">=</span> <span class="token string">&#39;C:/sys-shim-test/test-replace/test-replace1.txt&#39;</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">createParentDir</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">&quot;replace\\nreplace\\nreplace&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span>res1<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">&quot;replace&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rp&quot;</span><span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
 * 返回
 [false, 3]
 */</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span>res2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span>res1<span class="token punctuation">,</span> res2<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// {res1: &#39;replace\\nreplace\\nreplace&#39;, res2: &#39;rp\\nrp\\nrp&#39;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>替换并设置替换次数</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>path <span class="token operator">=</span> <span class="token string">&quot;C:/sys-shim-test/test-replace/test-replace2.txt&quot;</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">createParentDir</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">&quot;replace\\nreplace\\nreplace\\nreplace&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span>res1<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">&quot;replace&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rp&quot;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
 * 返回
 [false, 3]
 */</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span>res2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span>res1<span class="token punctuation">,</span> res2<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// {res1: &#39;replace\\nreplace\\nreplace\\nreplace&#39;, res2: &#39;rp\\nrp\\nrp\\nreplace&#39;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fsys-setcurdir-目录" tabindex="-1"><a class="header-anchor" href="#fsys-setcurdir-目录"><span>fsys.setCurDir(目录)</span></a></h2><p>设置当前目录。</p><p>当前目录易被改动，导致相对路径（例如 &quot;./res/&quot;）位置变化。 路径首字符用单个斜杠或反斜杆表示「应用程序根目录」的写法更可靠， 例如：（例如 &quot;/res/&quot;）。 很多组件（例如文件对话框）都可能会悄悄改变当前目录</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res1<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">getCurDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">setCurDir</span><span class="token punctuation">(</span><span class="token string">&quot;../&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">getCurDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span>res1<span class="token punctuation">,</span> res2<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// {res1: &#39;D:\\\\git2\\\\sys-shim-doc\\\\&#39;, res2: &#39;D:\\\\git2\\\\&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fsys-shortpath-路径" tabindex="-1"><a class="header-anchor" href="#fsys-shortpath-路径"><span>fsys.shortpath(路径)</span></a></h2><p>转换为短路径, 如果文件不存在,返回空值, 短文件名指向会因实际文件数变更,所以不能把短路径存入数据库</p><p>存在特定文件目录无法获取短路径且返回包含空格的长路径的可能性 如无必要，不建议使用或依赖此函数，正确使用 process 等可以自动 转义路径参数中的空格</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 创建路径</span>
path <span class="token operator">=</span> <span class="token string">&#39;C:/sys-shim-test/program files/&#39;</span>

<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">createDir</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">shortpath</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
 * 返回
[false, &#39;C:\\\\SYS-SH~1\\\\PROGRA~1\\\\&#39;]
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fsys-getsysdir" tabindex="-1"><a class="header-anchor" href="#fsys-getsysdir"><span>fsys.getSysDir()</span></a></h2><p>返回系统目录<br> 可选在参数中指定子路径并返回完整路径</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">getSysDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
 * 返回
[false, &#39;C:\\\\WINDOWS\\\\SysWOW64&#39;]
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fsys-getwindir" tabindex="-1"><a class="header-anchor" href="#fsys-getwindir"><span>fsys.getWinDir()</span></a></h2><p>返回windows目录<br> 可选在参数中指定子路径并返回完整路径</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">getWinDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
 * 返回
[false, &#39;C:\\\\WINDOWS&#39;]
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fsys-searchfile" tabindex="-1"><a class="header-anchor" href="#fsys-searchfile"><span>fsys.searchFile</span></a></h2><p>查找文件</p><h3 id="fsys-searchfile-文件名" tabindex="-1"><a class="header-anchor" href="#fsys-searchfile-文件名"><span>fsys.searchFile(文件名)</span></a></h3><p>检查程序根目录、当前工作目录、系统目录<br> 是否包含指定文件，找到则返回文件完整路径。<br> 不搜寻子目录</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">searchFile</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">explorer.exe</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
 * 返回
[false, &#39;C:\\\\WINDOWS\\\\SysWOW64\\\\explorer.exe&#39;]
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fsys-searchfile-文件名-目录" tabindex="-1"><a class="header-anchor" href="#fsys-searchfile-文件名-目录"><span>fsys.searchFile(文件名, 目录, ...)</span></a></h3><p>检查一个或多个目录下是否包含指定文件<br> 如果存在返回完整路径,否则返回 null。<br> 不搜寻子目录</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">searchFile</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">desktop.ini</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">C:/Program Files</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">C:/Program Files (x86)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
 * 返回
[false, &#39;C:\\\\Program Files\\\\desktop.ini&#39;]
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fsys-searchfile-文件名-目录-true" tabindex="-1"><a class="header-anchor" href="#fsys-searchfile-文件名-目录-true"><span>fsys.searchFile(文件名, 目录, true)</span></a></h3><p>在指定目录以及其子目录下搜寻指定文件，<br> 如果存在返回完整路径,否则返回 null。</p><p>内部调用 fsys.enum 查找，参数 @1 支持 &quot;*&quot;,&quot;?&quot; 等通配符</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">createDir</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">C:/sys-shim-test/a</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">createDir</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">C:/sys-shim-test/b</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">C:/sys-shim-test/a/file.txt</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">searchFile</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">*.txt</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">C:/sys-shim-test</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token doc-comment comment">/**
 * 返回
[false, &#39;C:\\\\sys-shim-test\\\\a\\\\file.txt&#39;]
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,122);function h(y,b){const t=i("ExternalLinkIcon");return c(),o("div",null,[u,n("p",null,[s("文档属性文档："),n("a",r,[s("https://learn.microsoft.com/zh-cn/windows/win32/fileio/file-attribute-constants"),e(t)])]),d,n("p",null,[s("文档属性文档："),n("a",k,[s("https://learn.microsoft.com/zh-cn/windows/win32/fileio/file-attribute-constants"),e(t)])]),v,n("p",null,[s("文档属性文档："),n("a",m,[s("https://learn.microsoft.com/zh-cn/windows/win32/fileio/file-attribute-constants"),e(t)])]),f])}const x=p(l,[["render",h],["__file","fsys.html.vue"]]),j=JSON.parse('{"path":"/docs/api/fsys/fsys.html","title":"fsys","lang":"zh-CN","frontmatter":{"description":"fsys 下面的演示代码创建文件统一在 C:/sys-shim-test/ 文件夹下，我们先创建它。 fsys.attrib 添加，移除，获取文件属性 fsys.attrib(文件路径, undefined, 文件属性) 添加文件属性 参数一为文件路径 参数三 可以用 | 操作符连接多个属性 成功返回新属性,失败返回null 文档属性文档：https:...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/sys-shim-doc/docs/api/fsys/fsys.html"}],["meta",{"property":"og:site_name","content":"sys-shim"}],["meta",{"property":"og:title","content":"fsys"}],["meta",{"property":"og:description","content":"fsys 下面的演示代码创建文件统一在 C:/sys-shim-test/ 文件夹下，我们先创建它。 fsys.attrib 添加，移除，获取文件属性 fsys.attrib(文件路径, undefined, 文件属性) 添加文件属性 参数一为文件路径 参数三 可以用 | 操作符连接多个属性 成功返回新属性,失败返回null 文档属性文档：https:..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-22T04:15:32.000Z"}],["meta",{"property":"article:author","content":"wll8"}],["meta",{"property":"article:modified_time","content":"2024-03-22T04:15:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"fsys\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-22T04:15:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"wll8\\",\\"url\\":\\"https://github.com/wll8\\"}]}"]]},"headers":[{"level":2,"title":"fsys.attrib","slug":"fsys-attrib","link":"#fsys-attrib","children":[{"level":3,"title":"fsys.attrib(文件路径, undefined, 文件属性)","slug":"fsys-attrib-文件路径-undefined-文件属性","link":"#fsys-attrib-文件路径-undefined-文件属性","children":[]},{"level":3,"title":"fsys.attrib(文件路径, 文件属性)","slug":"fsys-attrib-文件路径-文件属性","link":"#fsys-attrib-文件路径-文件属性","children":[]},{"level":3,"title":"fsys.attrib(文件路径)","slug":"fsys-attrib-文件路径","link":"#fsys-attrib-文件路径","children":[]}]},{"level":2,"title":"fsys.copy","slug":"fsys-copy","link":"#fsys-copy","children":[{"level":3,"title":"fsys.copy(源路径, 目标路径)","slug":"fsys-copy-源路径-目标路径","link":"#fsys-copy-源路径-目标路径","children":[]}]},{"level":2,"title":"fsys.createDir(目录路径)","slug":"fsys-createdir-目录路径","link":"#fsys-createdir-目录路径","children":[]},{"level":2,"title":"fsys.createParentDir(路径)","slug":"fsys-createparentdir-路径","link":"#fsys-createparentdir-路径","children":[]},{"level":2,"title":"fsys.delete","slug":"fsys-delete","link":"#fsys-delete","children":[{"level":3,"title":"fsys.delete(路径)","slug":"fsys-delete-路径","link":"#fsys-delete-路径","children":[]}]},{"level":2,"title":"fsys.deleteEx","slug":"fsys-deleteex","link":"#fsys-deleteex","children":[]},{"level":2,"title":"fsys.deleteEx(路径)","slug":"fsys-deleteex-路径","link":"#fsys-deleteex-路径","children":[]},{"level":2,"title":"fsys.formatSize","slug":"fsys-formatsize","link":"#fsys-formatsize","children":[{"level":3,"title":"fsys.formatSize()","slug":"fsys-formatsize-1","link":"#fsys-formatsize-1","children":[]},{"level":3,"title":"fsys.formatSize(字节长度)","slug":"fsys-formatsize-字节长度","link":"#fsys-formatsize-字节长度","children":[]},{"level":3,"title":"fsys.formatSize(字节长度低位, 字节长度高位)","slug":"fsys-formatsize-字节长度低位-字节长度高位","link":"#fsys-formatsize-字节长度低位-字节长度高位","children":[]}]},{"level":2,"title":"fsys.getCurDir()","slug":"fsys-getcurdir","link":"#fsys-getcurdir","children":[]},{"level":2,"title":"fsys.getDrive()","slug":"fsys-getdrive","link":"#fsys-getdrive","children":[]},{"level":2,"title":"fsys.getExtensionName(路径)","slug":"fsys-getextensionname-路径","link":"#fsys-getextensionname-路径","children":[]},{"level":2,"title":"fsys.getFileName(文件路径)","slug":"fsys-getfilename-文件路径","link":"#fsys-getfilename-文件路径","children":[]},{"level":2,"title":"fsys.getParentDir(路径)","slug":"fsys-getparentdir-路径","link":"#fsys-getparentdir-路径","children":[]},{"level":2,"title":"fsys.getTempDir()","slug":"fsys-gettempdir","link":"#fsys-gettempdir","children":[]},{"level":2,"title":"fsys.idListFromPath(路径)","slug":"fsys-idlistfrompath-路径","link":"#fsys-idlistfrompath-路径","children":[]},{"level":2,"title":"fsys.isDir(路径)","slug":"fsys-isdir-路径","link":"#fsys-isdir-路径","children":[]},{"level":2,"title":"fsys.isHidden(文件路径)","slug":"fsys-ishidden-文件路径","link":"#fsys-ishidden-文件路径","children":[]},{"level":2,"title":"fsys.isReadonly(文件路径)","slug":"fsys-isreadonly-文件路径","link":"#fsys-isreadonly-文件路径","children":[]},{"level":2,"title":"fsys.isSystem(文件路径)","slug":"fsys-issystem-文件路径","link":"#fsys-issystem-文件路径","children":[]},{"level":2,"title":"fsys.joinpath(根目录, 不定个数子路径)","slug":"fsys-joinpath-根目录-不定个数子路径","link":"#fsys-joinpath-根目录-不定个数子路径","children":[]},{"level":2,"title":"fsys.list(目录路径, 模式匹配, 通配符)","slug":"fsys-list-目录路径-模式匹配-通配符","link":"#fsys-list-目录路径-模式匹配-通配符","children":[]},{"level":2,"title":"fsys.longpath(路径)","slug":"fsys-longpath-路径","link":"#fsys-longpath-路径","children":[]},{"level":2,"title":"fsys.move","slug":"fsys-move","link":"#fsys-move","children":[{"level":3,"title":"fsys.move(源路径, 目标路径)","slug":"fsys-move-源路径-目标路径","link":"#fsys-move-源路径-目标路径","children":[]}]},{"level":2,"title":"fsys.rename","slug":"fsys-rename","link":"#fsys-rename","children":[{"level":3,"title":"fsys.rename(源路径, 目标路径, FOF选项)","slug":"fsys-rename-源路径-目标路径-fof选项","link":"#fsys-rename-源路径-目标路径-fof选项","children":[]}]},{"level":2,"title":"fsys.replace(文件路径, 查找串, 替换串, 替换次数)","slug":"fsys-replace-文件路径-查找串-替换串-替换次数","link":"#fsys-replace-文件路径-查找串-替换串-替换次数","children":[]},{"level":2,"title":"fsys.setCurDir(目录)","slug":"fsys-setcurdir-目录","link":"#fsys-setcurdir-目录","children":[]},{"level":2,"title":"fsys.shortpath(路径)","slug":"fsys-shortpath-路径","link":"#fsys-shortpath-路径","children":[]},{"level":2,"title":"fsys.getSysDir()","slug":"fsys-getsysdir","link":"#fsys-getsysdir","children":[]},{"level":2,"title":"fsys.getWinDir()","slug":"fsys-getwindir","link":"#fsys-getwindir","children":[]},{"level":2,"title":"fsys.searchFile","slug":"fsys-searchfile","link":"#fsys-searchfile","children":[{"level":3,"title":"fsys.searchFile(文件名)","slug":"fsys-searchfile-文件名","link":"#fsys-searchfile-文件名","children":[]},{"level":3,"title":"fsys.searchFile(文件名, 目录, ...)","slug":"fsys-searchfile-文件名-目录","link":"#fsys-searchfile-文件名-目录","children":[]},{"level":3,"title":"fsys.searchFile(文件名, 目录, true)","slug":"fsys-searchfile-文件名-目录-true","link":"#fsys-searchfile-文件名-目录-true","children":[]}]}],"git":{"createdTime":1711080932000,"updatedTime":1711080932000,"contributors":[{"name":"wll8","email":"xwdaysme@gmail.com","commits":1}]},"readingTime":{"minutes":11.18,"words":3354},"filePathRelative":"docs/api/fsys/fsys.md","localizedDate":"2024年3月22日","autoDesc":true}');export{x as comp,j as data};
