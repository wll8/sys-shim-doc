import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as l,c as o,b as a,d as n,e as t,a as s}from"./app-Cphw7wZ-.js";const c={},r=s(`<p><code>Neutralino.filesystem</code> 命名空间包含了文件处理的方法。</p><h2 id="filesystem-createdirectory-path" tabindex="-1"><a class="header-anchor" href="#filesystem-createdirectory-path"><span>filesystem.createDirectory(path)</span></a></h2><p>递归地创建一个或多个目录。如果无法创建目录，将抛出 <code>NE_FS_DIRCRER</code> 异常。</p><h3 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h3><ul><li><code>path</code> String: 新目录路径。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>filesystem<span class="token punctuation">.</span><span class="token function">createDirectory</span><span class="token punctuation">(</span><span class="token string">&#39;./newDirectory&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>filesystem<span class="token punctuation">.</span><span class="token function">createDirectory</span><span class="token punctuation">(</span><span class="token constant">NL_PATH</span> <span class="token operator">+</span> <span class="token string">&#39;/myFolder/api/fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="filesystem-remove-path" tabindex="-1"><a class="header-anchor" href="#filesystem-remove-path"><span>filesystem.remove(path)</span></a></h2><p>移除一个目录或文件。如果给定的路径是一个目录，此函数将递归删除该目录的所有内容。 如果无法删除，将抛出 <code>NE_FS_REMVERR</code> 异常。</p><h3 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h3><ul><li><code>path</code> String: 目录或文件路径。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>filesystem<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">&#39;./tmpDirectory&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>filesystem<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">&#39;./tmpFile.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="filesystem-writefile-filename-data" tabindex="-1"><a class="header-anchor" href="#filesystem-writefile-filename-data"><span>filesystem.writeFile(filename, data)</span></a></h2><p>写入文本文件。如果写入文件时出错，将抛出 <code>NE_FS_FILWRER</code> 异常。</p><h3 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h3><ul><li><code>filename</code> String: 文件名。</li><li><code>data</code> String: 文件内容。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>filesystem<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token string">&#39;./myFile.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Sample content&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="filesystem-appendfile-filename-data" tabindex="-1"><a class="header-anchor" href="#filesystem-appendfile-filename-data"><span>filesystem.appendFile(filename, data)</span></a></h2><p>向文件追加文本内容。如果写入文件时出错，将抛出 <code>NE_FS_FILWRER</code> 异常。如果提供的文件不存在， 此函数将创建一个新文件并写入 <code>data</code>。</p><h3 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3"><span>Parameters</span></a></h3><ul><li><code>filename</code> String: 文件名。</li><li><code>data</code> String: 要追加的内容。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>filesystem<span class="token punctuation">.</span><span class="token function">appendFile</span><span class="token punctuation">(</span><span class="token string">&#39;./myFile.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Sample &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>filesystem<span class="token punctuation">.</span><span class="token function">appendFile</span><span class="token punctuation">(</span><span class="token string">&#39;./myFile.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="filesystem-writebinaryfile-filename-data" tabindex="-1"><a class="header-anchor" href="#filesystem-writebinaryfile-filename-data"><span>filesystem.writeBinaryFile(filename, data)</span></a></h2><p>写入二进制文件。如果写入文件时出错，将抛出 <code>NE_FS_FILWRER</code> 异常。</p><h3 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4"><span>Parameters</span></a></h3>`,24),u=a("li",null,[a("code",null,"filename"),n(" String: 文件名。")],-1),d=a("code",null,"data",-1),k={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",target:"_blank",rel:"noopener noreferrer"},m=s(`<div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">let</span> rawBin <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayBuffer</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>rawBin<span class="token punctuation">)</span><span class="token punctuation">;</span>
view<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">64</span><span class="token punctuation">;</span> <span class="token comment">// 将 ASCII &#39;@&#39; 保存到二进制文件中</span>

<span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>filesystem<span class="token punctuation">.</span><span class="token function">writeBinaryFile</span><span class="token punctuation">(</span><span class="token string">&#39;./myFile.bin&#39;</span><span class="token punctuation">,</span> rawBin<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="filesystem-appendbinaryfile-filename-data" tabindex="-1"><a class="header-anchor" href="#filesystem-appendbinaryfile-filename-data"><span>filesystem.appendBinaryFile(filename, data)</span></a></h2><p>向文件追加二进制数据。如果写入文件时出错，将抛出 <code>NE_FS_FILWRER</code> 异常。如果提供的文件不存在， 此函数将创建一个新文件并写入 <code>data</code>。</p><h3 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5"><span>Parameters</span></a></h3>`,4),h=a("li",null,[a("code",null,"filename"),n(" String: 文件名。")],-1),f=a("code",null,"data",-1),v={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",target:"_blank",rel:"noopener noreferrer"},y=s(`<div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">let</span> rawBin <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayBuffer</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>rawBin<span class="token punctuation">)</span><span class="token punctuation">;</span>
view<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">64</span><span class="token punctuation">;</span> <span class="token comment">// 将 ASCII &#39;@&#39; 保存到二进制文件中</span>

<span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>filesystem<span class="token punctuation">.</span><span class="token function">appendBinaryFile</span><span class="token punctuation">(</span><span class="token string">&#39;./myFile.bin&#39;</span><span class="token punctuation">,</span> rawBin<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>filesystem<span class="token punctuation">.</span><span class="token function">appendBinaryFile</span><span class="token punctuation">(</span><span class="token string">&#39;./myFile.bin&#39;</span><span class="token punctuation">,</span> rawBin<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="filesystem-readfile-filename" tabindex="-1"><a class="header-anchor" href="#filesystem-readfile-filename"><span>filesystem.readFile(filename)</span></a></h2><p>读取文本文件。如果读取文件时出错，将抛出 <code>NE_FS_FILRDER</code> 异常。</p><h3 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6"><span>Parameters</span></a></h3><ul><li><code>filename</code> String: 文件名。</li><li><code>pos</code> Number (optional): 文件光标位置，以字节为单位。</li><li><code>size</code> Number (optional): 文件读取缓冲区大小，以字节为单位。</li></ul><h3 id="return-string-awaited" tabindex="-1"><a class="header-anchor" href="#return-string-awaited"><span>Return String (awaited):</span></a></h3><p>文件内容。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>filesystem<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;./myFile.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Content: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>filesystem<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;./myFile.txt&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">pos</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token literal-property property">size</span><span class="token operator">:</span> <span class="token number">10</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Content: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="filesystem-readbinaryfile-filename" tabindex="-1"><a class="header-anchor" href="#filesystem-readbinaryfile-filename"><span>filesystem.readBinaryFile(filename)</span></a></h2><p>读取二进制文件。如果读取文件时出错，将抛出 <code>NE_FS_FILRDER</code> 异常。</p><h3 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7"><span>Parameters</span></a></h3><ul><li><code>filename</code> String: 文件名。</li><li><code>pos</code> Number (optional): 文件光标位置，以字节为单位。</li><li><code>size</code> Number (optional): 文件读取缓冲区大小，以字节为单位。</li></ul><h3 id="return-object-awaited" tabindex="-1"><a class="header-anchor" href="#return-object-awaited"><span>Return Object (awaited):</span></a></h3>`,13),b={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",target:"_blank",rel:"noopener noreferrer"},g=s(`<div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>filesystem<span class="token punctuation">.</span><span class="token function">readBinaryFile</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">fileName</span><span class="token operator">:</span> <span class="token string">&#39;./myFile.bin&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Binary content: &#39;</span><span class="token punctuation">,</span> view<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="filesystem-openfile-filename" tabindex="-1"><a class="header-anchor" href="#filesystem-openfile-filename"><span>filesystem.openFile(filename)</span></a></h2><p>创建一个可读文件流。如果打开文件时出错，将抛出 <code>NE_FS_FILOPER</code> 异常。</p><h3 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8"><span>Parameters</span></a></h3><ul><li><code>filename</code> String: 文件名。</li></ul><h3 id="return-number-awaited" tabindex="-1"><a class="header-anchor" href="#return-number-awaited"><span>Return Number (awaited):</span></a></h3><p>文件流标识符。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">let</span> fileId <span class="token operator">=</span> <span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>filesystem<span class="token punctuation">.</span><span class="token function">openFile</span><span class="token punctuation">(</span><span class="token string">&#39;./myFile.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">ID: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>fileId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="filesystem-updateopenedfile-id-action-data" tabindex="-1"><a class="header-anchor" href="#filesystem-updateopenedfile-id-action-data"><span>filesystem.updateOpenedFile(id, action, data)</span></a></h2><p>调用文件流操作。如果框架无法更新流，将抛出 <code>NE_FS_UNLTOUP</code> 异常。调用此方法可读取和查找已打开的文件（即可读流）。</p><h3 id="parameters-9" tabindex="-1"><a class="header-anchor" href="#parameters-9"><span>Parameters</span></a></h3>`,11),w=a("li",null,[a("code",null,"id"),n(" Number: 文件流标识符。")],-1),_=a("code",null,"action",-1),j=a("li",null,[a("code",null,"read"),n(": 从文件流中读取一个字节段。")],-1),N=a("li",null,[a("code",null,"readBinary"),n(": 与 "),a("code",null,"read"),n(" 行为相同，但使用二进制读取模式。")],-1),x=a("code",null,"readAll",-1),F=a("code",null,"read",-1),S={href:"https://en.wikipedia.org/wiki/End-of-file",target:"_blank",rel:"noopener noreferrer"},R=a("li",null,[a("code",null,"readAllBinary"),n(": 与 "),a("code",null,"readAll"),n(" 行为相同，但使用二进制读取模式。")],-1),E=a("li",null,[a("code",null,"seek"),n(": 设置文件光标位置。")],-1),P=a("li",null,[a("code",null,"close"),n(": 关闭并释放文件处理资源。")],-1),I=s("<li><code>data</code> Object (optional): <code>action</code> 的额外数据。如果 <code>action</code> 是 <code>read</code>、<code>readBinary</code>、<code>readAll</code> 或 <code>readAllBinary</code>，发送缓冲区大小（默认为 256 字节）。如果操作是 <code>seek</code>，则发送文件流光标位置。</li>",1),B=s(`<div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">let</span> fileId <span class="token operator">=</span> <span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>filesystem<span class="token punctuation">.</span><span class="token function">openFile</span><span class="token punctuation">(</span><span class="token string">&#39;./myFile.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> content <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
Neutralino<span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;openedFile&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">evt</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>evt<span class="token punctuation">.</span>detail<span class="token punctuation">.</span>id <span class="token operator">==</span> fileId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span><span class="token punctuation">(</span>evt<span class="token punctuation">.</span>detail<span class="token punctuation">.</span>action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">case</span> <span class="token string">&#39;data&#39;</span><span class="token operator">:</span>
        content <span class="token operator">+=</span> evt<span class="token punctuation">.</span>detail<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token string">&#39;end&#39;</span><span class="token operator">:</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 将文件流光标设置到第 10 个字节</span>
<span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>filesystem<span class="token punctuation">.</span><span class="token function">updateOpenedFile</span><span class="token punctuation">(</span>fileId<span class="token punctuation">,</span> <span class="token string">&#39;seek&#39;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 从光标位置读取 2 个字节</span>
<span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>filesystem<span class="token punctuation">.</span><span class="token function">updateOpenedFile</span><span class="token punctuation">(</span>fileId<span class="token punctuation">,</span> <span class="token string">&#39;read&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 读取下一个字节直到光标达到 EOF（缓冲区大小：2）</span>
<span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>filesystem<span class="token punctuation">.</span><span class="token function">updateOpenedFile</span><span class="token punctuation">(</span>fileId<span class="token punctuation">,</span> <span class="token string">&#39;readAll&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="filesystem-getopenedfileinfo-id" tabindex="-1"><a class="header-anchor" href="#filesystem-getopenedfileinfo-id"><span>filesystem.getOpenedFileInfo(id)</span></a></h2><p>返回文件流详情。如果文件流标识符无效，将抛出 <code>NE_FS_UNLTFOP</code> 异常。</p><h3 id="parameters-10" tabindex="-1"><a class="header-anchor" href="#parameters-10"><span>Parameters</span></a></h3><ul><li><code>id</code> Number: 文件流标识符。</li></ul><h3 id="return-object-awaited-1" tabindex="-1"><a class="header-anchor" href="#return-object-awaited-1"><span>Return Object (awaited):</span></a></h3><ul><li><code>id</code> Number: 文件流标识符。</li><li><code>eof</code> Boolean: 如果流达到 EOF，则变为 <code>true</code>。</li><li><code>pos</code> Number: 文件流光标位置。</li><li><code>lastRead</code> Number: 最后读取的字节数。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">let</span> info <span class="token operator">=</span> <span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>filesystem<span class="token punctuation">.</span><span class="token function">getOpenedFileInfo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="filesystem-createwatcher-path" tabindex="-1"><a class="header-anchor" href="#filesystem-createwatcher-path"><span>filesystem.createWatcher(path)</span></a></h2><p>创建一个文件系统监视器。如果无法创建监视器，将抛出 <code>NE_FS_UNLCWAT</code> 异常。如果给定路径已经有活跃的监视器，此函数将返回现有的监视器标识符。</p><h3 id="parameters-11" tabindex="-1"><a class="header-anchor" href="#parameters-11"><span>Parameters</span></a></h3><ul><li><code>path</code> String: 目录路径。</li></ul><h3 id="return-number-awaited-1" tabindex="-1"><a class="header-anchor" href="#return-number-awaited-1"><span>Return Number (awaited):</span></a></h3><p>文件监视器标识符。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">let</span> watcherId <span class="token operator">=</span> <span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>filesystem<span class="token punctuation">.</span><span class="token function">createWatcher</span><span class="token punctuation">(</span><span class="token constant">NL_PATH</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Neutralino<span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;watchFile&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">evt</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>watcherId <span class="token operator">==</span> evt<span class="token punctuation">.</span>detail<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>evt<span class="token punctuation">.</span>detail<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">ID: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>watcherId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="filesystem-removewatcher-watcherid" tabindex="-1"><a class="header-anchor" href="#filesystem-removewatcher-watcherid"><span>filesystem.removeWatcher(watcherId)</span></a></h2><p>移除一个文件系统监视器。如果无法移除监视器，将抛出 <code>NE_FS_NOWATID</code> 异常。</p><h3 id="parameters-12" tabindex="-1"><a class="header-anchor" href="#parameters-12"><span>Parameters</span></a></h3><ul><li><code>watcherId</code> Number: 文件监视器标识符。</li></ul><h3 id="return-number-awaited-2" tabindex="-1"><a class="header-anchor" href="#return-number-awaited-2"><span>Return Number (awaited):</span></a></h3><p>文件监视器标识符。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">let</span> watcherId <span class="token operator">=</span> <span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>filesystem<span class="token punctuation">.</span><span class="token function">createWatcher</span><span class="token punctuation">(</span><span class="token constant">NL_PATH</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">ID: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>watcherId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>filesystem<span class="token punctuation">.</span><span class="token function">removeWatcher</span><span class="token punctuation">(</span>watcherId<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="filesystem-getwatchers" tabindex="-1"><a class="header-anchor" href="#filesystem-getwatchers"><span>filesystem.getWatchers()</span></a></h2><p>返回已创建文件监视器的信息。</p><h3 id="return-object-awaited-2" tabindex="-1"><a class="header-anchor" href="#return-object-awaited-2"><span>Return Object (awaited):</span></a></h3><p><code>FileWatcher</code> 对象数组。</p><h3 id="filewatcher" tabindex="-1"><a class="header-anchor" href="#filewatcher"><span>FileWatcher</span></a></h3><ul><li><code>id</code> Number: 监视器标识符。</li><li><code>path</code> String: 文件监视器路径。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">let</span> watchers <span class="token operator">=</span> <span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>filesystem<span class="token punctuation">.</span><span class="token function">getWatchers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> watcher <span class="token keyword">of</span> watchers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>watcher<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="filesystem-readdirectory-path-options" tabindex="-1"><a class="header-anchor" href="#filesystem-readdirectory-path-options"><span>filesystem.readDirectory(path, options)</span></a></h2><p>读取目录内容。如果路径不存在，将抛出 <code>NE_FS_NOPATHE</code> 异常。</p><h3 id="parameters-13" tabindex="-1"><a class="header-anchor" href="#parameters-13"><span>Parameters</span></a></h3><ul><li><code>path</code> String: 文件/目录路径。</li></ul><h3 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>options</span></a></h3><ul><li><code>recursive</code> Boolean: 递归读取子目录。默认值为 <code>false</code>。</li></ul><h3 id="return-object-awaited-3" tabindex="-1"><a class="header-anchor" href="#return-object-awaited-3"><span>Return Object (awaited):</span></a></h3><p><code>DirectoryEntry</code> 对象数组。</p><h3 id="directoryentry" tabindex="-1"><a class="header-anchor" href="#directoryentry"><span>DirectoryEntry</span></a></h3><ul><li><code>entry</code> String: 文件名。</li><li><code>type</code> String: 条目类型（<code>FILE</code> 或 <code>DIRECTORY</code>）。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">let</span> entries <span class="token operator">=</span> <span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>filesystem<span class="token punctuation">.</span><span class="token function">readDirectory</span><span class="token punctuation">(</span><span class="token constant">NL_PATH</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Content: &#39;</span><span class="token punctuation">,</span> entries<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="filesystem-copy-source-destination" tabindex="-1"><a class="header-anchor" href="#filesystem-copy-source-destination"><span>filesystem.copy(source, destination)</span></a></h2><p>将文件或目录复制到新位置。如果系统无法复制路径，将抛出 <code>NE_FS_COPYERR</code> 异常。</p><h3 id="parameters-14" tabindex="-1"><a class="header-anchor" href="#parameters-14"><span>Parameters</span></a></h3><ul><li><code>source</code> String: 源路径。</li><li><code>destination</code> String: 目的路径。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>filesystem<span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span><span class="token string">&#39;./source.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;./destination.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>filesystem<span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span><span class="token string">&#39;./myDir&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;./myDirCopy&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="filesystem-move-source-destination" tabindex="-1"><a class="header-anchor" href="#filesystem-move-source-destination"><span>filesystem.move(source, destination)</span></a></h2><p>将文件或目录移动到新位置。如果系统无法重命名路径，将抛出 <code>NE_FS_MOVEERR</code> 异常。</p><h3 id="parameters-15" tabindex="-1"><a class="header-anchor" href="#parameters-15"><span>Parameters</span></a></h3><ul><li><code>source</code> String: 源路径。</li><li><code>destination</code> String: 目的路径。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>filesystem<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token string">&#39;./source.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;./destination.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>filesystem<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token string">&#39;./myDir&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;./myFolder&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="filesystem-getstats-path" tabindex="-1"><a class="header-anchor" href="#filesystem-getstats-path"><span>filesystem.getStats(path)</span></a></h2><p>返回给定路径的文件统计信息。如果给定路径不存在或无法访问，将抛出 <code>NE_FS_NOPATHE</code> 异常。 因此，您可以使用此方法来检查文件或目录的存在。</p><h3 id="parameters-16" tabindex="-1"><a class="header-anchor" href="#parameters-16"><span>Parameters</span></a></h3><ul><li><code>path</code> String: 文件或目录路径。</li></ul><h3 id="return-object-awaited-4" tabindex="-1"><a class="header-anchor" href="#return-object-awaited-4"><span>Return Object (awaited):</span></a></h3>`,55),O=a("li",null,[a("code",null,"size"),n(" Number: 大小，以字节为单位。")],-1),A=a("li",null,[a("code",null,"isFile"),n(" Boolean: 如果路径是普通文件，则为 "),a("code",null,"true"),n("。")],-1),D=a("li",null,[a("code",null,"isDirectory"),n(" Boolean: 如果路径是目录，则为 "),a("code",null,"true"),n("。")],-1),W=a("code",null,"createdAt",-1),T={href:"https://en.wikipedia.org/wiki/Inode",target:"_blank",rel:"noopener noreferrer"},L=a("li",null,[a("code",null,"modifiedAt"),n(" Number: 文件最后修改时间的 Unix 毫秒值。")],-1),C=s(`<div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">let</span> stats <span class="token operator">=</span> <span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>filesystem<span class="token punctuation">.</span><span class="token function">getStats</span><span class="token punctuation">(</span><span class="token string">&#39;./sampleVideo.mp4&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Stats:&#39;</span><span class="token punctuation">,</span> stats<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function U(z,V){const e=p("ExternalLinkIcon");return l(),o("div",null,[r,a("ul",null,[u,a("li",null,[d,n(" ArrayBuffer: 二进制文件内容，以 "),a("a",k,[n("ArrayBuffer"),t(e)]),n(" 形式。")])]),m,a("ul",null,[h,a("li",null,[f,n(" ArrayBuffer: 要追加的二进制内容，以 "),a("a",v,[n("ArrayBuffer"),t(e)]),n(" 形式。")])]),y,a("p",null,[n("二进制文件内容，以 "),a("a",b,[n("ArrayBuffer"),t(e)]),n(" 形式。")]),g,a("ul",null,[w,a("li",null,[_,n(" String: 要执行的操作。仅接受以下值： "),a("ul",null,[j,N,a("li",null,[x,n(": 触发 "),F,n(" 操作，直到文件流光标位置达到 "),a("a",S,[n("EOF"),t(e)]),n("。")]),R,E,P])]),I]),B,a("ul",null,[O,A,D,a("li",null,[W,n(" Number: 在 Windows 上，返回文件创建时间的 Unix 毫秒值 — 在 Unix 或类 Unix 平台上，返回最后 "),a("a",T,[n("inode"),t(e)]),n(" 修改时间的 Unix 毫秒值。")]),L]),C])}const J=i(c,[["render",U],["__file","filesystem.html.vue"]]),G=JSON.parse('{"path":"/docs/neutralinojs/api/filesystem.html","title":"Neutralino.filesystem","lang":"zh-CN","frontmatter":{"title":"Neutralino.filesystem","description":"Neutralino.filesystem 命名空间包含了文件处理的方法。 filesystem.createDirectory(path) 递归地创建一个或多个目录。如果无法创建目录，将抛出 NE_FS_DIRCRER 异常。 Parameters path String: 新目录路径。 filesystem.remove(path) 移除一个目录或...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/sys-shim-doc/docs/neutralinojs/api/filesystem.html"}],["meta",{"property":"og:site_name","content":"sys-shim"}],["meta",{"property":"og:title","content":"Neutralino.filesystem"}],["meta",{"property":"og:description","content":"Neutralino.filesystem 命名空间包含了文件处理的方法。 filesystem.createDirectory(path) 递归地创建一个或多个目录。如果无法创建目录，将抛出 NE_FS_DIRCRER 异常。 Parameters path String: 新目录路径。 filesystem.remove(path) 移除一个目录或..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-19T06:47:25.000Z"}],["meta",{"property":"article:author","content":"wll8"}],["meta",{"property":"article:modified_time","content":"2024-03-19T06:47:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Neutralino.filesystem\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-19T06:47:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"wll8\\",\\"url\\":\\"https://github.com/wll8\\"}]}"]]},"headers":[{"level":2,"title":"filesystem.createDirectory(path)","slug":"filesystem-createdirectory-path","link":"#filesystem-createdirectory-path","children":[{"level":3,"title":"Parameters","slug":"parameters","link":"#parameters","children":[]}]},{"level":2,"title":"filesystem.remove(path)","slug":"filesystem-remove-path","link":"#filesystem-remove-path","children":[{"level":3,"title":"Parameters","slug":"parameters-1","link":"#parameters-1","children":[]}]},{"level":2,"title":"filesystem.writeFile(filename, data)","slug":"filesystem-writefile-filename-data","link":"#filesystem-writefile-filename-data","children":[{"level":3,"title":"Parameters","slug":"parameters-2","link":"#parameters-2","children":[]}]},{"level":2,"title":"filesystem.appendFile(filename, data)","slug":"filesystem-appendfile-filename-data","link":"#filesystem-appendfile-filename-data","children":[{"level":3,"title":"Parameters","slug":"parameters-3","link":"#parameters-3","children":[]}]},{"level":2,"title":"filesystem.writeBinaryFile(filename, data)","slug":"filesystem-writebinaryfile-filename-data","link":"#filesystem-writebinaryfile-filename-data","children":[{"level":3,"title":"Parameters","slug":"parameters-4","link":"#parameters-4","children":[]}]},{"level":2,"title":"filesystem.appendBinaryFile(filename, data)","slug":"filesystem-appendbinaryfile-filename-data","link":"#filesystem-appendbinaryfile-filename-data","children":[{"level":3,"title":"Parameters","slug":"parameters-5","link":"#parameters-5","children":[]}]},{"level":2,"title":"filesystem.readFile(filename)","slug":"filesystem-readfile-filename","link":"#filesystem-readfile-filename","children":[{"level":3,"title":"Parameters","slug":"parameters-6","link":"#parameters-6","children":[]},{"level":3,"title":"Return String (awaited):","slug":"return-string-awaited","link":"#return-string-awaited","children":[]}]},{"level":2,"title":"filesystem.readBinaryFile(filename)","slug":"filesystem-readbinaryfile-filename","link":"#filesystem-readbinaryfile-filename","children":[{"level":3,"title":"Parameters","slug":"parameters-7","link":"#parameters-7","children":[]},{"level":3,"title":"Return Object (awaited):","slug":"return-object-awaited","link":"#return-object-awaited","children":[]}]},{"level":2,"title":"filesystem.openFile(filename)","slug":"filesystem-openfile-filename","link":"#filesystem-openfile-filename","children":[{"level":3,"title":"Parameters","slug":"parameters-8","link":"#parameters-8","children":[]},{"level":3,"title":"Return Number (awaited):","slug":"return-number-awaited","link":"#return-number-awaited","children":[]}]},{"level":2,"title":"filesystem.updateOpenedFile(id, action, data)","slug":"filesystem-updateopenedfile-id-action-data","link":"#filesystem-updateopenedfile-id-action-data","children":[{"level":3,"title":"Parameters","slug":"parameters-9","link":"#parameters-9","children":[]}]},{"level":2,"title":"filesystem.getOpenedFileInfo(id)","slug":"filesystem-getopenedfileinfo-id","link":"#filesystem-getopenedfileinfo-id","children":[{"level":3,"title":"Parameters","slug":"parameters-10","link":"#parameters-10","children":[]},{"level":3,"title":"Return Object (awaited):","slug":"return-object-awaited-1","link":"#return-object-awaited-1","children":[]}]},{"level":2,"title":"filesystem.createWatcher(path)","slug":"filesystem-createwatcher-path","link":"#filesystem-createwatcher-path","children":[{"level":3,"title":"Parameters","slug":"parameters-11","link":"#parameters-11","children":[]},{"level":3,"title":"Return Number (awaited):","slug":"return-number-awaited-1","link":"#return-number-awaited-1","children":[]}]},{"level":2,"title":"filesystem.removeWatcher(watcherId)","slug":"filesystem-removewatcher-watcherid","link":"#filesystem-removewatcher-watcherid","children":[{"level":3,"title":"Parameters","slug":"parameters-12","link":"#parameters-12","children":[]},{"level":3,"title":"Return Number (awaited):","slug":"return-number-awaited-2","link":"#return-number-awaited-2","children":[]}]},{"level":2,"title":"filesystem.getWatchers()","slug":"filesystem-getwatchers","link":"#filesystem-getwatchers","children":[{"level":3,"title":"Return Object (awaited):","slug":"return-object-awaited-2","link":"#return-object-awaited-2","children":[]},{"level":3,"title":"FileWatcher","slug":"filewatcher","link":"#filewatcher","children":[]}]},{"level":2,"title":"filesystem.readDirectory(path, options)","slug":"filesystem-readdirectory-path-options","link":"#filesystem-readdirectory-path-options","children":[{"level":3,"title":"Parameters","slug":"parameters-13","link":"#parameters-13","children":[]},{"level":3,"title":"options","slug":"options","link":"#options","children":[]},{"level":3,"title":"Return Object (awaited):","slug":"return-object-awaited-3","link":"#return-object-awaited-3","children":[]},{"level":3,"title":"DirectoryEntry","slug":"directoryentry","link":"#directoryentry","children":[]}]},{"level":2,"title":"filesystem.copy(source, destination)","slug":"filesystem-copy-source-destination","link":"#filesystem-copy-source-destination","children":[{"level":3,"title":"Parameters","slug":"parameters-14","link":"#parameters-14","children":[]}]},{"level":2,"title":"filesystem.move(source, destination)","slug":"filesystem-move-source-destination","link":"#filesystem-move-source-destination","children":[{"level":3,"title":"Parameters","slug":"parameters-15","link":"#parameters-15","children":[]}]},{"level":2,"title":"filesystem.getStats(path)","slug":"filesystem-getstats-path","link":"#filesystem-getstats-path","children":[{"level":3,"title":"Parameters","slug":"parameters-16","link":"#parameters-16","children":[]},{"level":3,"title":"Return Object (awaited):","slug":"return-object-awaited-4","link":"#return-object-awaited-4","children":[]}]}],"git":{"createdTime":1710830845000,"updatedTime":1710830845000,"contributors":[{"name":"wll8","email":"xwdaysme@gmail.com","commits":1}]},"readingTime":{"minutes":5.38,"words":1615},"filePathRelative":"docs/neutralinojs/api/filesystem.md","localizedDate":"2024年3月19日","autoDesc":true}');export{J as comp,G as data};
