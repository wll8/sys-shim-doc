import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as t}from"./app-Dp7IhS89.js";const p={},e=t(`<h1 id="fsys-dlg" tabindex="-1"><a class="header-anchor" href="#fsys-dlg"><span>fsys.dlg</span></a></h1><p>系统文件对话框。</p><p>请注意：文件对话框会改变当前目录，导致相对路径（例如 &quot;./res/&quot;）位置变化。</p><p>路径首字符用单个斜杠或反斜杆表示「应用程序根目录」的写法更可靠， 例如：（例如 &quot;/res/&quot;）。</p><p>可以使用 fsys.setCurDir 函数设置当前目录， 很多组件（例如文件对话框）都可能会悄悄改变当前目录。 而「应用程序根目录」则是固定不变的</p><h2 id="fsys-dlg-open" tabindex="-1"><a class="header-anchor" href="#fsys-dlg-open"><span>fsys.dlg.open</span></a></h2><p>打开选择单文件对话框</p><h3 id="fsys-dlg-open-指定文件类型-对话框标题-默认目录-父窗口-选项参数-默认文件名" tabindex="-1"><a class="header-anchor" href="#fsys-dlg-open-指定文件类型-对话框标题-默认目录-父窗口-选项参数-默认文件名"><span>fsys.dlg.open(指定文件类型, 对话框标题, 默认目录, 父窗口, 选项参数, 默认文件名)</span></a></h3><p>打开选择单文件对话框，所有参可选。 文件类型以竖线分隔,并以坚线分隔类型说明与后缀名,例如 &quot;所有文件|<em>.</em>|文本文件|<em>.txt;</em>.md|&quot;</p><p>一个类型说明匹配多个后缀名应以分号分隔</p><p>如果选择文件返回文件路径，否则返回空</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 默认打开</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res1<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span>dlg<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span>res1<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// {res1: &#39;F:\\\\company-code\\\\sys-shim-doc\\\\README.md&#39;}</span>

<span class="token comment">// 指定单个文件类型打开</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res<span class="token punctuation">]</span> <span class="token operator">=</span>  <span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span>dlg<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;*.md|*.md&quot;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span>res<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// {res: &#39;F:\\\\company-code\\\\sys-shim-doc\\\\README.md&#39;}</span>

<span class="token comment">// 指定多个文件类型打开</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res<span class="token punctuation">]</span> <span class="token operator">=</span>  <span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span>dlg<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;*.md|*.md;*.js|*.js&quot;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span>res<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// {res: &#39;F:\\\\company-code\\\\sys-shim-doc\\\\run.js&#39;}</span>

<span class="token comment">// 指定对话框标题</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res<span class="token punctuation">]</span> <span class="token operator">=</span>  <span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span>dlg<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;*.md|*.md;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;选择md文件&quot;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span>res<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// {res: &#39;F:\\\\company-code\\\\sys-shim-doc\\\\README.md&#39;}</span>

<span class="token doc-comment comment">/**
 * 指定默认目录
 */</span> 
<span class="token comment">// 创建目录</span>
path <span class="token operator">=</span> <span class="token string">&quot;C:/sys-shim-test/&quot;</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">createDir</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
filepath <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">C:/sys-shim-test/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.md</span><span class="token template-punctuation string">\`</span></span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>filepath<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hello</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res<span class="token punctuation">]</span> <span class="token operator">=</span>  <span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span>dlg<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;*.md|*.md;&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;选择md文件&quot;</span><span class="token punctuation">,</span> path<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span>res<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// {res: &#39;C:\\\\sys-shim-test\\\\1711089428189.md&#39;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fsys-dlg-opendir" tabindex="-1"><a class="header-anchor" href="#fsys-dlg-opendir"><span>fsys.dlg.openDir</span></a></h2><p>打开选择目录对话框， 建议改用 fsys.dlg.dir</p><h3 id="fsys-dlg-opendir-1" tabindex="-1"><a class="header-anchor" href="#fsys-dlg-opendir-1"><span>fsys.dlg.openDir()</span></a></h3><p>打开选择目录对话框， 建议改用 fsys.dlg.dir</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 默认打开</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span>dlg<span class="token punctuation">.</span><span class="token function">openDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span>res<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// {res: &#39;C:\\\\sys-shim-test&#39;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fsys-dlg-opendir-目录-父窗口-标题-窗口标题" tabindex="-1"><a class="header-anchor" href="#fsys-dlg-opendir-目录-父窗口-标题-窗口标题"><span>fsys.dlg.openDir(目录, 父窗口, 标题, 窗口标题)</span></a></h3><p>打开选择目录对话框, 所有参数都是可选参数,支持unicode字符串</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>path <span class="token operator">=</span> <span class="token string">&#39;C:\\\\sys-shim-test&#39;</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">createDir</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
<span class="token comment">// 选择目录, 设置标题</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span>dlg<span class="token punctuation">.</span><span class="token function">openDir</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span><span class="token punctuation">,</span><span class="token string">&quot;打开标题&quot;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span>res<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// {res: &#39;C:\\\\sys-shim-test&#39;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fsys-dlg-openex" tabindex="-1"><a class="header-anchor" href="#fsys-dlg-openex"><span>fsys.dlg.openEx</span></a></h2><p>打开选择多文件对话框</p><h3 id="fsys-dlg-openex-指定文件类型-对话框标题-默认目录-父窗口-选项参数-缓冲区大小" tabindex="-1"><a class="header-anchor" href="#fsys-dlg-openex-指定文件类型-对话框标题-默认目录-父窗口-选项参数-缓冲区大小"><span>fsys.dlg.openEx(指定文件类型, 对话框标题, 默认目录, 父窗口, 选项参数, 缓冲区大小)</span></a></h3><p>打开选择多文件对话框，所有参数可选。 文件类型以竖线分隔,并以坚线分隔类型说明与后缀名,例如 &quot;所有文件|<em>.</em>|文本文件|<em>.txt;</em>.md|&quot;</p><p>一个类型说明匹配多个后缀名应以分号分隔， 第一个返回值为一个数组,包含一个或多个被选定的文件路径 多选则会返回第二个数组值,包含被选目录路径以及多个文件名</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>path <span class="token operator">=</span> <span class="token string">&#39;C:\\\\sys-shim-test&#39;</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">createDir</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>

<span class="token comment">// 写入文件</span>
filepath <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">C:/sys-shim-test/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.md</span><span class="token template-punctuation string">\`</span></span>
filepath2 <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">C:/sys-shim-test/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.js</span><span class="token template-punctuation string">\`</span></span>

<span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>filepath<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hello</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>filepath2<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">const msg = &#39;hello&#39;; console.log(msg)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>

<span class="token comment">// 选择目录</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span>dlg<span class="token punctuation">.</span><span class="token function">openEx</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span>res<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// {res: [&#39;C:\\\\sys-shim-test\\\\1711089428189.md&#39;]}</span>

<span class="token comment">// 指定多个文件类型打开</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res<span class="token punctuation">]</span> <span class="token operator">=</span>  <span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span>dlg<span class="token punctuation">.</span><span class="token function">openEx</span><span class="token punctuation">(</span><span class="token string">&quot;*.md|*.md;*.js|*.js&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;选择文件&quot;</span><span class="token punctuation">,</span> path<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span>res<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// {res: [&#39;C:\\\\sys-shim-test\\\\1711089428189.md&#39;, &#39;C:\\\\sys-shim-test\\\\1711416380382.js&#39;]}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fsys-dlg-save" tabindex="-1"><a class="header-anchor" href="#fsys-dlg-save"><span>fsys.dlg.save</span></a></h2><p>显示保存文件对话框框 覆盖已存在的文件时不显示确认对话框。</p><h3 id="fsys-dlg-save-1" tabindex="-1"><a class="header-anchor" href="#fsys-dlg-save-1"><span>fsys.dlg.save()</span></a></h3><p>显示保存文件对话框框 覆盖已存在的文件时不显示确认对话框。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>path <span class="token operator">=</span> <span class="token string">&#39;C:\\\\sys-shim-test&#39;</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">createDir</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
<span class="token comment">// 写入文件</span>
filepath <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">C:/sys-shim-test/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.js</span><span class="token template-punctuation string">\`</span></span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>filepath<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">const msg = &#39;hello&#39;; console.log(msg)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token comment">// 选择目录</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span>dlg<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span>res<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// {res: &#39;C:\\\\sys-shim-test\\\\1711416380382.js&#39;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fsys-dlg-save-指定文件类型-对话框标题-默认目录-父窗口-选项参数-默认文件名" tabindex="-1"><a class="header-anchor" href="#fsys-dlg-save-指定文件类型-对话框标题-默认目录-父窗口-选项参数-默认文件名"><span>fsys.dlg.save(指定文件类型, 对话框标题, 默认目录, 父窗口, 选项参数, 默认文件名)</span></a></h3><p>显示保存文件对话框框,所有参数为可选参数 文件类型以竖线分隔,并以坚线分隔类型说明与后缀名,例如 &quot;所有文件|<em>.</em>|文本文件|<em>.txt;</em>.md|&quot;</p><p>一个类型说明匹配多个后缀名应以分号分隔</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>path <span class="token operator">=</span> <span class="token string">&#39;C:\\\\sys-shim-test&#39;</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">createDir</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>

<span class="token comment">// 写入文件</span>
filepath <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">C:/sys-shim-test/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.md</span><span class="token template-punctuation string">\`</span></span>

<span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>filepath<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hello</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>

<span class="token comment">// 指定多个文件类型打开</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res<span class="token punctuation">]</span> <span class="token operator">=</span>  <span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span>dlg<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token string">&quot;*.md|*.md;*.js|*.js&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;选择文件&quot;</span><span class="token punctuation">,</span> path<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span>res<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// {res: &#39;C:\\\\sys-shim-test\\\\1711089428189.md&#39;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fsys-dlg-saveop" tabindex="-1"><a class="header-anchor" href="#fsys-dlg-saveop"><span>fsys.dlg.saveOp</span></a></h2><p>显示保存文件对话框框, 覆盖已存在的文件时显示确认对话框（overwrite prompt）</p><h3 id="fsys-dlg-saveop-指定文件类型-对话框标题-默认目录-父窗口-默认文件名" tabindex="-1"><a class="header-anchor" href="#fsys-dlg-saveop-指定文件类型-对话框标题-默认目录-父窗口-默认文件名"><span>fsys.dlg.saveOp(指定文件类型, 对话框标题, 默认目录, 父窗口, 默认文件名)</span></a></h3><p>显示保存文件对话框框, 覆盖已存在的文件时显示确认对话框。</p><p>所有参数为可选参数 文件类型以竖线分隔,并以坚线分隔类型说明与后缀名,例如 &quot;所有文件|<em>.</em>|文本文件|<em>.txt;</em>.md|&quot;</p><p>一个类型说明匹配多个后缀名应以分号分隔</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>path <span class="token operator">=</span> <span class="token string">&#39;C:\\\\sys-shim-test&#39;</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span><span class="token function">createDir</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>

<span class="token comment">// 写入文件</span>
filepath <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">C:/sys-shim-test/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.md</span><span class="token template-punctuation string">\`</span></span>
filepath2 <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">C:/sys-shim-test/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.js</span><span class="token template-punctuation string">\`</span></span>

<span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>filepath<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hello</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token keyword">await</span> native<span class="token punctuation">.</span>string<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>filepath2<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">const msg = &#39;hello&#39;; console.log(msg)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>

<span class="token comment">// 选择目录</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span>dlg<span class="token punctuation">.</span><span class="token function">saveOp</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span>res<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// {res: &#39;C:\\\\sys-shim-test\\\\1711089428189.md&#39;}</span>

<span class="token comment">// 指定多个文件类型打开</span>
<span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token punctuation">,</span> res<span class="token punctuation">]</span> <span class="token operator">=</span>  <span class="token keyword">await</span> native<span class="token punctuation">.</span>fsys<span class="token punctuation">.</span>dlg<span class="token punctuation">.</span><span class="token function">saveOp</span><span class="token punctuation">(</span><span class="token string">&quot;*.md|*.md;*.js|*.js&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;选择文件&quot;</span><span class="token punctuation">,</span> path<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span>res<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// {res: &#39;C:\\\\sys-shim-test\\\\1711416380382.js&#39;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,42),o=[e];function c(i,l){return s(),a("div",null,o)}const d=n(p,[["render",c],["__file","fsys.dlg.html.vue"]]),r=JSON.parse('{"path":"/docs/api/fsys/fsys.dlg.html","title":"fsys.dlg","lang":"zh-CN","frontmatter":{"description":"fsys.dlg 系统文件对话框。 请注意：文件对话框会改变当前目录，导致相对路径（例如 \\"./res/\\"）位置变化。 路径首字符用单个斜杠或反斜杆表示「应用程序根目录」的写法更可靠， 例如：（例如 \\"/res/\\"）。 可以使用 fsys.setCurDir 函数设置当前目录， 很多组件（例如文件对话框）都可能会悄悄改变当前目录。 而「应用程序根目录」...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/sys-shim-doc/docs/api/fsys/fsys.dlg.html"}],["meta",{"property":"og:site_name","content":"sys-shim"}],["meta",{"property":"og:title","content":"fsys.dlg"}],["meta",{"property":"og:description","content":"fsys.dlg 系统文件对话框。 请注意：文件对话框会改变当前目录，导致相对路径（例如 \\"./res/\\"）位置变化。 路径首字符用单个斜杠或反斜杆表示「应用程序根目录」的写法更可靠， 例如：（例如 \\"/res/\\"）。 可以使用 fsys.setCurDir 函数设置当前目录， 很多组件（例如文件对话框）都可能会悄悄改变当前目录。 而「应用程序根目录」..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-27T02:35:45.000Z"}],["meta",{"property":"article:author","content":"wll8"}],["meta",{"property":"article:modified_time","content":"2024-03-27T02:35:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"fsys.dlg\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-27T02:35:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"wll8\\",\\"url\\":\\"https://github.com/wll8\\"}]}"]]},"headers":[{"level":2,"title":"fsys.dlg.open","slug":"fsys-dlg-open","link":"#fsys-dlg-open","children":[{"level":3,"title":"fsys.dlg.open(指定文件类型, 对话框标题, 默认目录, 父窗口, 选项参数, 默认文件名)","slug":"fsys-dlg-open-指定文件类型-对话框标题-默认目录-父窗口-选项参数-默认文件名","link":"#fsys-dlg-open-指定文件类型-对话框标题-默认目录-父窗口-选项参数-默认文件名","children":[]}]},{"level":2,"title":"fsys.dlg.openDir","slug":"fsys-dlg-opendir","link":"#fsys-dlg-opendir","children":[{"level":3,"title":"fsys.dlg.openDir()","slug":"fsys-dlg-opendir-1","link":"#fsys-dlg-opendir-1","children":[]},{"level":3,"title":"fsys.dlg.openDir(目录, 父窗口, 标题, 窗口标题)","slug":"fsys-dlg-opendir-目录-父窗口-标题-窗口标题","link":"#fsys-dlg-opendir-目录-父窗口-标题-窗口标题","children":[]}]},{"level":2,"title":"fsys.dlg.openEx","slug":"fsys-dlg-openex","link":"#fsys-dlg-openex","children":[{"level":3,"title":"fsys.dlg.openEx(指定文件类型, 对话框标题, 默认目录, 父窗口, 选项参数, 缓冲区大小)","slug":"fsys-dlg-openex-指定文件类型-对话框标题-默认目录-父窗口-选项参数-缓冲区大小","link":"#fsys-dlg-openex-指定文件类型-对话框标题-默认目录-父窗口-选项参数-缓冲区大小","children":[]}]},{"level":2,"title":"fsys.dlg.save","slug":"fsys-dlg-save","link":"#fsys-dlg-save","children":[{"level":3,"title":"fsys.dlg.save()","slug":"fsys-dlg-save-1","link":"#fsys-dlg-save-1","children":[]},{"level":3,"title":"fsys.dlg.save(指定文件类型, 对话框标题, 默认目录, 父窗口, 选项参数, 默认文件名)","slug":"fsys-dlg-save-指定文件类型-对话框标题-默认目录-父窗口-选项参数-默认文件名","link":"#fsys-dlg-save-指定文件类型-对话框标题-默认目录-父窗口-选项参数-默认文件名","children":[]}]},{"level":2,"title":"fsys.dlg.saveOp","slug":"fsys-dlg-saveop","link":"#fsys-dlg-saveop","children":[{"level":3,"title":"fsys.dlg.saveOp(指定文件类型, 对话框标题, 默认目录, 父窗口, 默认文件名)","slug":"fsys-dlg-saveop-指定文件类型-对话框标题-默认目录-父窗口-默认文件名","link":"#fsys-dlg-saveop-指定文件类型-对话框标题-默认目录-父窗口-默认文件名","children":[]}]}],"git":{"createdTime":1711506945000,"updatedTime":1711506945000,"contributors":[{"name":"windyeasy","email":"windyeasy13gb@163.com","commits":1}]},"readingTime":{"minutes":4.24,"words":1272},"filePathRelative":"docs/api/fsys/fsys.dlg.md","localizedDate":"2024年3月27日","autoDesc":true}');export{d as comp,r as data};
