import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,o as p,c,b as a,d as n,e as s,w as d,a as t}from"./app-Cphw7wZ-.js";const r={},u=a("code",null,"Neutralino.window",-1),w={href:"/docs/configuration/modes#window",target:"_blank",rel:"noopener noreferrer"},k=a("code",null,"window",-1),m=t(`<h2 id="window-settitle-title" tabindex="-1"><a class="header-anchor" href="#window-settitle-title"><span>window.setTitle(title)</span></a></h2><p>设置原生窗口的标题。</p><h3 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h3><ul><li><code>title</code> String (可选): 窗口标题。如果没有参数调用此函数，将清除标题。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">&#39;新标题&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="window-gettitle" tabindex="-1"><a class="header-anchor" href="#window-gettitle"><span>window.getTitle()</span></a></h2><p>返回原生窗口的标题。</p><h3 id="return-string-awaited" tabindex="-1"><a class="header-anchor" href="#return-string-awaited"><span>Return String (awaited):</span></a></h3><p>当前原生窗口实例的标题。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">let</span> title <span class="token operator">=</span> <span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">标题 = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="window-minimize" tabindex="-1"><a class="header-anchor" href="#window-minimize"><span>window.minimize()</span></a></h2><p>最小化原生窗口。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">minimize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="window-maximize" tabindex="-1"><a class="header-anchor" href="#window-maximize"><span>window.maximize()</span></a></h2><p>最大化原生窗口。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">maximize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="window-unmaximize" tabindex="-1"><a class="header-anchor" href="#window-unmaximize"><span>window.unmaximize()</span></a></h2><p>恢复原生窗口。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">unmaximize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="window-ismaximized" tabindex="-1"><a class="header-anchor" href="#window-ismaximized"><span>window.isMaximized()</span></a></h2><p>如果原生窗口被最大化，返回 <code>true</code>。</p><h3 id="return-boolean-awaited" tabindex="-1"><a class="header-anchor" href="#return-boolean-awaited"><span>Return Boolean (awaited):</span></a></h3><ul><li>基于当前最大化状态的 <code>true</code> 或 <code>false</code>。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">let</span> status <span class="token operator">=</span> <span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">isMaximized</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="window-setfullscreen" tabindex="-1"><a class="header-anchor" href="#window-setfullscreen"><span>window.setFullScreen()</span></a></h2><p>启用全屏模式。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">setFullScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="window-exitfullscreen" tabindex="-1"><a class="header-anchor" href="#window-exitfullscreen"><span>window.exitFullScreen()</span></a></h2><p>退出全屏模式。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">exitFullScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="window-isfullscreen" tabindex="-1"><a class="header-anchor" href="#window-isfullscreen"><span>window.isFullScreen()</span></a></h2><p>如果原生窗口处于全屏模式，返回 <code>true</code>。</p><h3 id="return-boolean-awaited-1" tabindex="-1"><a class="header-anchor" href="#return-boolean-awaited-1"><span>Return Boolean (awaited):</span></a></h3><ul><li>基于当前全屏状态的 <code>true</code> 或 <code>false</code>。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">let</span> status <span class="token operator">=</span> <span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">isFullScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="window-show" tabindex="-1"><a class="header-anchor" href="#window-show"><span>window.show()</span></a></h2><p>显示原生窗口。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="window-hide" tabindex="-1"><a class="header-anchor" href="#window-hide"><span>window.hide()</span></a></h2><p>隐藏原生窗口。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="window-isvisible" tabindex="-1"><a class="header-anchor" href="#window-isvisible"><span>window.isVisible()</span></a></h2><p>如果原生窗口可见，返回 <code>true</code>。</p><h3 id="return-boolean-awaited-2" tabindex="-1"><a class="header-anchor" href="#return-boolean-awaited-2"><span>Return Boolean (awaited):</span></a></h3><ul><li>基于当前可见状态的 <code>true</code> 或 <code>false</code>。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">let</span> status <span class="token operator">=</span> <span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">isVisible</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="window-focus" tabindex="-1"><a class="header-anchor" href="#window-focus"><span>window.focus()</span></a></h2><p>聚焦原生窗口。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="window-setalwaysontop-ontop" tabindex="-1"><a class="header-anchor" href="#window-setalwaysontop-ontop"><span>window.setAlwaysOnTop(onTop)</span></a></h2><p>激活或停用置顶模式。</p><h3 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h3><ul><li><code>onTop</code> Boolean (可选): 说明是否应激活置顶模式。默认值是 <code>true</code>。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">setAlwaysOnTop</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 或 setAlwaysOnTop();</span>
<span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">setAlwaysOnTop</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="window-move-x-y" tabindex="-1"><a class="header-anchor" href="#window-move-x-y"><span>window.move(x, y)</span></a></h2><p>将原生窗口移动到给定坐标。<code>Neutralinojs</code> 的跨平台坐标系统从屏幕的左上角开始。换句话说，<code>x=0,y=0</code> 点指的是设备主屏幕的左上角。</p><h3 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h3><ul><li><code>x</code> Number: 水平位置的整数值。</li><li><code>y</code> Number: 垂直位置的整数值。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="window-center" tabindex="-1"><a class="header-anchor" href="#window-center"><span>window.center()</span></a></h2><p>在当前显示器内居中原生应用窗口。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">center</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="window-seticon-icon" tabindex="-1"><a class="header-anchor" href="#window-seticon-icon"><span>window.setIcon(icon)</span></a></h2><p>为原生窗口或Dock设置图标。</p><h3 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3"><span>Parameters</span></a></h3><ul><li><code>icon</code> String: 图标路径。一个 <code>200x200</code> 的PNG图像文件在所有支持的操作系统上都工作得很好。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> icon <span class="token operator">=</span> <span class="token string">&#39;/resources/icons/appIcon.png&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">setIcon</span><span class="token punctuation">(</span>icon<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="window-setdraggableregion-domid" tabindex="-1"><a class="header-anchor" href="#window-setdraggableregion-domid"><span>window.setDraggableRegion(domId)</span></a></h2><p>将给定的DOM元素转换为可拖动区域。用户将能够通过拖动给定的DOM元素来拖动原生窗口。这个功能适合制作自定义窗口栏，与<code>无边框模式</code>一起使用。</p><h3 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4"><span>Parameters</span></a></h3><ul><li><code>domId</code> String | HTMLElement: DOM元素标识符。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">setDraggableRegion</span><span class="token punctuation">(</span><span class="token string">&#39;myCustomTitleBar&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="window-unsetdraggableregion-domid" tabindex="-1"><a class="header-anchor" href="#window-unsetdraggableregion-domid"><span>window.unsetDraggableRegion(domId)</span></a></h2><p>通过移除拖动事件处理程序，将可拖动区域转换为普通的DOM元素。</p><h3 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5"><span>Parameters</span></a></h3><ul><li><code>domId</code> String | HTMLElement: DOM元素标识符。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">unsetDraggableRegion</span><span class="token punctuation">(</span><span class="token string">&#39;myCustomTitleBar&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="window-setsize-options" tabindex="-1"><a class="header-anchor" href="#window-setsize-options"><span>window.setSize(Options)</span></a></h2><p>此方法设置窗口的大小。</p><h3 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>Options</span></a></h3><ul><li><code>width</code> Number (可选): 窗口宽度，以像素为单位。</li><li><code>height</code> Number (可选): 窗口高度，以像素为单位。</li><li><code>minWidth</code> Number (可选): 窗口最小宽度，以像素为单位。</li><li><code>minHeight</code> Number (可选): 窗口最小高度，以像素为单位。</li><li><code>maxWidth</code> Number (可选): 窗口最大宽度，以像素为单位。</li><li><code>maxHeight</code> Number (可选): 窗口最大高度，以像素为单位。</li><li><code>resizable</code> Boolean (可选): 一个布尔值，使窗口可调整大小或固定。</li></ul><p>此方法总是期望宽度和高度成对出现。 例如，如果你设置了 <code>minWidth</code>，你也应该设置 <code>minHeight</code>。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span>
    <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
    <span class="token literal-property property">maxWidth</span><span class="token operator">:</span> <span class="token number">600</span><span class="token punctuation">,</span>
    <span class="token literal-property property">maxHeight</span><span class="token operator">:</span> <span class="token number">400</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">resizable</span><span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="window-getsize" tabindex="-1"><a class="header-anchor" href="#window-getsize"><span>window.getSize()</span></a></h2><p>返回窗口大小信息。</p><h3 id="return-boolean-awaited-3" tabindex="-1"><a class="header-anchor" href="#return-boolean-awaited-3"><span>Return Boolean (awaited):</span></a></h3><ul><li><code>width</code> Number: 窗口宽度，以像素为单位。</li><li><code>height</code> Number: 窗口高度，以像素为单位。</li><li><code>minWidth</code> Number: 窗口最小宽度，以像素为单位。</li><li><code>minHeight</code> Number: 窗口最小高度，以像素为单位。</li><li><code>maxWidth</code> Number: 窗口最大宽度，以像素为单位。</li><li><code>maxHeight</code> Number: 窗口最大高度，以像素为单位。</li><li><code>resizable</code> Boolean: 说明窗口是可调整大小还是固定的。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">let</span> sizeInfo <span class="token operator">=</span> <span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sizeInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="window-getposition" tabindex="-1"><a class="header-anchor" href="#window-getposition"><span>window.getPosition()</span></a></h2><p>返回窗口位置坐标。</p><h3 id="return-boolean-awaited-4" tabindex="-1"><a class="header-anchor" href="#return-boolean-awaited-4"><span>Return Boolean (awaited):</span></a></h3><ul><li><code>x</code> Number: 窗口左边缘的水平坐标。</li><li><code>y</code> Number: 窗口顶边缘的垂直坐标。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">let</span> position <span class="token operator">=</span> <span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">getPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="window-create-url-windowoptions" tabindex="-1"><a class="header-anchor" href="#window-create-url-windowoptions"><span>window.create(url, WindowOptions)</span></a></h2><p>创建一个原生窗口。你可以使用此方法为你的多窗口 <code>Neutralinojs</code> 应用程序创建新窗口。<code>Neutralinojs</code> 为每个原生窗口产生一个新进程。因此，一旦窗口被创建，新窗口就作为一个独立的应用程序运行。</p>`,95),h=t(`<h3 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6"><span>Parameters</span></a></h3><ul><li><code>url</code> String: 要加载的URL。例如：<code>/resources/aboutWindow.html</code>。支持加载本地和远程应用资源。本地资源路径需要以 <code>/</code> 开头。</li><li><code>options</code> (可选): <code>WindowOptions</code> 类型的实例。</li></ul><h3 id="windowoptions" tabindex="-1"><a class="header-anchor" href="#windowoptions"><span>WindowOptions</span></a></h3><ul><li><code>title</code> String: 窗口标题。</li><li><code>icon</code> String: 窗口图标路径。</li><li><code>fullScreen</code> Boolean: 设置全屏模式。</li><li><code>alwaysOnTop</code> Boolean: 激活最顶层模式。</li><li><code>enableInspector</code> Boolean: 激活开发者工具并打开web检查员窗口。</li><li><code>borderless</code> Boolean: 使窗口无边框。</li><li><code>maximize</code> Boolean: 启动窗口最大化。</li><li><code>hidden</code> Boolean: 隐藏窗口。</li><li><code>maximizable</code> Boolean: 设置窗口是否可以最大化。</li><li><code>exitProcessOnClose</code> Boolean: 当用户点击窗口关闭按钮时退出应用程序进程。</li><li><code>width</code> Number: 窗口宽度。</li><li><code>height</code> Number: 窗口高度。</li><li><code>x</code> Number: 窗口 <code>x</code> 位置。</li><li><code>y</code> Number: 窗口 <code>y</code> 位置。</li><li><code>minWidth</code> Number: 窗口最小宽度。</li><li><code>minHeight</code> Number: 窗口最小高度。</li><li><code>maxWidth</code> Number: 窗口最大宽度。</li><li><code>maxHeight</code> Number: 窗口最大高度。</li><li><code>processArgs</code> String: 新窗口进程的额外命令行参数。从<code>这里</code>检查所有支持的内部命令行参数。</li></ul><h3 id="return-object-awaited" tabindex="-1"><a class="header-anchor" href="#return-object-awaited"><span>Return Object (awaited):</span></a></h3><ul><li><code>pid</code> Number: 进程标识符。</li><li><code>stdOut</code> String: 标准输出。此值总是为空，因为新窗口进程异步启动。</li><li><code>stdErr</code> String: 标准错误。此值总是为空，因为新窗口进程异步启动。</li><li><code>exitCode</code> Number: 进程的退出代码。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">await</span> Neutralino<span class="token punctuation">.</span>window<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string">&#39;/resources/aboutWindow.html&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;/resources/icons/aboutIcon.png&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">enableInspector</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span>
    <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>
    <span class="token literal-property property">maximizable</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">exitProcessOnClose</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">processArgs</span><span class="token operator">:</span> <span class="token string">&#39;--window-id=W_ABOUT&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function v(g,b){const i=e("ExternalLinkIcon"),o=e("RouteLink");return p(),c("div",null,[a("p",null,[u,n(" 命名空间包含与当前原生窗口实例有关的方法。此命名空间的方法仅适用于 "),a("a",w,[k,s(i)]),n(" 模式。")]),m,a("p",null,[n("然而，你可以使用"),s(o,{to:"/docs/neutralinojs/api/storage.html"},{default:d(()=>[n("存储 API")]),_:1}),n(" 在窗口之间建立通讯流。")]),h])}const j=l(r,[["render",v],["__file","window.html.vue"]]),y=JSON.parse('{"path":"/docs/neutralinojs/api/window.html","title":"Neutralino.window","lang":"zh-CN","frontmatter":{"title":"Neutralino.window","description":"Neutralino.window 命名空间包含与当前原生窗口实例有关的方法。此命名空间的方法仅适用于 window 模式。 window.setTitle(title) 设置原生窗口的标题。 Parameters title String (可选): 窗口标题。如果没有参数调用此函数，将清除标题。 window.getTitle() 返回原生窗口的标...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/sys-shim-doc/docs/neutralinojs/api/window.html"}],["meta",{"property":"og:site_name","content":"sys-shim"}],["meta",{"property":"og:title","content":"Neutralino.window"}],["meta",{"property":"og:description","content":"Neutralino.window 命名空间包含与当前原生窗口实例有关的方法。此命名空间的方法仅适用于 window 模式。 window.setTitle(title) 设置原生窗口的标题。 Parameters title String (可选): 窗口标题。如果没有参数调用此函数，将清除标题。 window.getTitle() 返回原生窗口的标..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-19T06:47:25.000Z"}],["meta",{"property":"article:author","content":"wll8"}],["meta",{"property":"article:modified_time","content":"2024-03-19T06:47:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Neutralino.window\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-19T06:47:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"wll8\\",\\"url\\":\\"https://github.com/wll8\\"}]}"]]},"headers":[{"level":2,"title":"window.setTitle(title)","slug":"window-settitle-title","link":"#window-settitle-title","children":[{"level":3,"title":"Parameters","slug":"parameters","link":"#parameters","children":[]}]},{"level":2,"title":"window.getTitle()","slug":"window-gettitle","link":"#window-gettitle","children":[{"level":3,"title":"Return String (awaited):","slug":"return-string-awaited","link":"#return-string-awaited","children":[]}]},{"level":2,"title":"window.minimize()","slug":"window-minimize","link":"#window-minimize","children":[]},{"level":2,"title":"window.maximize()","slug":"window-maximize","link":"#window-maximize","children":[]},{"level":2,"title":"window.unmaximize()","slug":"window-unmaximize","link":"#window-unmaximize","children":[]},{"level":2,"title":"window.isMaximized()","slug":"window-ismaximized","link":"#window-ismaximized","children":[{"level":3,"title":"Return Boolean (awaited):","slug":"return-boolean-awaited","link":"#return-boolean-awaited","children":[]}]},{"level":2,"title":"window.setFullScreen()","slug":"window-setfullscreen","link":"#window-setfullscreen","children":[]},{"level":2,"title":"window.exitFullScreen()","slug":"window-exitfullscreen","link":"#window-exitfullscreen","children":[]},{"level":2,"title":"window.isFullScreen()","slug":"window-isfullscreen","link":"#window-isfullscreen","children":[{"level":3,"title":"Return Boolean (awaited):","slug":"return-boolean-awaited-1","link":"#return-boolean-awaited-1","children":[]}]},{"level":2,"title":"window.show()","slug":"window-show","link":"#window-show","children":[]},{"level":2,"title":"window.hide()","slug":"window-hide","link":"#window-hide","children":[]},{"level":2,"title":"window.isVisible()","slug":"window-isvisible","link":"#window-isvisible","children":[{"level":3,"title":"Return Boolean (awaited):","slug":"return-boolean-awaited-2","link":"#return-boolean-awaited-2","children":[]}]},{"level":2,"title":"window.focus()","slug":"window-focus","link":"#window-focus","children":[]},{"level":2,"title":"window.setAlwaysOnTop(onTop)","slug":"window-setalwaysontop-ontop","link":"#window-setalwaysontop-ontop","children":[{"level":3,"title":"Parameters","slug":"parameters-1","link":"#parameters-1","children":[]}]},{"level":2,"title":"window.move(x, y)","slug":"window-move-x-y","link":"#window-move-x-y","children":[{"level":3,"title":"Parameters","slug":"parameters-2","link":"#parameters-2","children":[]}]},{"level":2,"title":"window.center()","slug":"window-center","link":"#window-center","children":[]},{"level":2,"title":"window.setIcon(icon)","slug":"window-seticon-icon","link":"#window-seticon-icon","children":[{"level":3,"title":"Parameters","slug":"parameters-3","link":"#parameters-3","children":[]}]},{"level":2,"title":"window.setDraggableRegion(domId)","slug":"window-setdraggableregion-domid","link":"#window-setdraggableregion-domid","children":[{"level":3,"title":"Parameters","slug":"parameters-4","link":"#parameters-4","children":[]}]},{"level":2,"title":"window.unsetDraggableRegion(domId)","slug":"window-unsetdraggableregion-domid","link":"#window-unsetdraggableregion-domid","children":[{"level":3,"title":"Parameters","slug":"parameters-5","link":"#parameters-5","children":[]}]},{"level":2,"title":"window.setSize(Options)","slug":"window-setsize-options","link":"#window-setsize-options","children":[{"level":3,"title":"Options","slug":"options","link":"#options","children":[]}]},{"level":2,"title":"window.getSize()","slug":"window-getsize","link":"#window-getsize","children":[{"level":3,"title":"Return Boolean (awaited):","slug":"return-boolean-awaited-3","link":"#return-boolean-awaited-3","children":[]}]},{"level":2,"title":"window.getPosition()","slug":"window-getposition","link":"#window-getposition","children":[{"level":3,"title":"Return Boolean (awaited):","slug":"return-boolean-awaited-4","link":"#return-boolean-awaited-4","children":[]}]},{"level":2,"title":"window.create(url, WindowOptions)","slug":"window-create-url-windowoptions","link":"#window-create-url-windowoptions","children":[{"level":3,"title":"Parameters","slug":"parameters-6","link":"#parameters-6","children":[]},{"level":3,"title":"WindowOptions","slug":"windowoptions","link":"#windowoptions","children":[]},{"level":3,"title":"Return Object (awaited):","slug":"return-object-awaited","link":"#return-object-awaited","children":[]}]}],"git":{"createdTime":1710830845000,"updatedTime":1710830845000,"contributors":[{"name":"wll8","email":"xwdaysme@gmail.com","commits":1}]},"readingTime":{"minutes":4.57,"words":1370},"filePathRelative":"docs/neutralinojs/api/window.md","localizedDate":"2024年3月19日","autoDesc":true}');export{j as comp,y as data};
